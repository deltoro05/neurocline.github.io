<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Some Things Are Obvious</title>
    <description>Answers to some of the world&#39;s questions
</description>
    <link>http://neurocline.github.io/</link>
    <atom:link href="http://neurocline.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 13 Mar 2016 23:01:41 -0700</pubDate>
    <lastBuildDate>Sun, 13 Mar 2016 23:01:41 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Xcode notes</title>
        <description>&lt;p&gt;Xcode is in parts good to great, and in parts terrible. One thing that’s terrible is all the documentation
that I can lay my hands on. It seems to be aimed at people who work on small projects.&lt;/p&gt;

&lt;p&gt;This is not a replacement, it’s just some things I was searching while I was trying to figure things
out on my own. This is stuff that people have had to figure out, e.g. the Premake and CMake authors doing
Xcode project generation.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pewpewthespells.com/blog/managing_xcode.html&quot;&gt;Managing Xcode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://vocaro.com/trevor/blog/2012/10/21/xcode-groups-vs-folder-references/&quot;&gt;Xcode Groups vs. Folder References&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way, I think CocoaPods is approaching it from the wrong direction, it’s maintaining a foreign
build system inside Xcode. I think. I should really actually use CocoaPods before I condemn it :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/venmo/synx&quot;&gt;venmo/synx&lt;/a&gt; is an interesting project that reorganizes the files on disk
to match the order declared in the Xcode project. This is presumably because people find it easier to
organize the Xcode project first?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9726000/xcode-4-2-and-using-a-static-library-causing-problems/9726445&quot;&gt;XCode 4.2 and Using a Static Library Causing Problems&lt;/a&gt;. I read things like this and I think someone must have gone
horribly wrong somewhere.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.monobjc.net/xcode-project-file-format.html&quot;&gt;Xcode Project File Format&lt;/a&gt;. Some notes from the
Monobjc bridge project on the Xcode project file format.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://danwright.info/blog/2010/10/xcode-pbxproject-files/&quot;&gt;A brief look at the Xcode project format&lt;/a&gt;, and &lt;a href=&quot;http://danwright.info/blog/2010/10/xcode-pbxproject-files-2/&quot;&gt;More on the Xcode project format&lt;/a&gt; and &lt;a href=&quot;http://danwright.info/blog/2010/10/xcode-pbxproject-files-3/&quot;&gt;Xcode project object UUIDs&lt;/a&gt;. A slightly more in depth explanation and spelunking.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cmake.org/pipermail/cmake/2004-April/005015.html&quot;&gt;[Cmake] Re: CMake Apple XCode support?&lt;/a&gt;. A thread from 2004 that apparently predated CMake’s ability to create Xcode projects.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.macdevcenter.com/pub/a/mac/2004/04/20/xcodetounix.html&quot;&gt;PBTOMAKE – Xcode to Unix&lt;/a&gt;. Another 2004 era Xcode project format tool.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.objc.io/issues/6-build-tools/cocoapods-under-the-hood/&quot;&gt;CocoaPods Under The Hood&lt;/a&gt;. Also see &lt;a href=&quot;http://stackoverflow.com/questions/18917137/how-does-cocoapods-work&quot;&gt;How does CocoaPods work&lt;/a&gt;. And then see &lt;a href=&quot;http://blog.mugunthkumar.com/articles/the-problem-with-cocoapods/&quot;&gt;The problem with Cocoapods&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/ios/guides/cocoapods&quot;&gt;Install a Google SDK using CocoaPods&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/0xced/xcproj&quot;&gt;0xced/xcproj&lt;/a&gt;. Command line tool for manipulating Xcode project files.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://drekka.ghost.io/xcode-project-file-merges-or-not-cocoapods/&quot;&gt;XCode project file merges (or not) &amp;amp; Cocoapods&lt;/a&gt;. One technique to mergeable .xcodeproj files is to keep internal sections sorted.&lt;/p&gt;
</description>
        <pubDate>Sun, 13 Mar 2016 22:14:00 -0700</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/13/xcode-notes.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/13/xcode-notes.html</guid>
        
        <category>programming</category>
        
        <category>Xcode</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1967.htm&quot;&gt;Field Experience With Annex K — Bounds Checking Interfaces&lt;/a&gt;. It’s all bad.&lt;/p&gt;

&lt;p&gt;Three-part article on the Jacksonville C++17 meeting&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://meetingcpp.com/index.php/br/items/current-proposals-for-c17.html&quot;&gt;Current Proposals for C++17&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://meetingcpp.com/index.php/br/items/c17-and-its-technical-specifications.html&quot;&gt;C++17 and its Technical Specifications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://meetingcpp.com/index.php/br/items/cpp17-and-other-future-highlights-of-cpp.html&quot;&gt;C++17 and other future highlights of C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@mbostock/what-makes-software-good-943557f8a488#.papdt8s63&quot;&gt;What Makes Software Good?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://sourcecode.cio.gov/&quot;&gt;Source Code Policy&lt;/a&gt;. Government open-source policy.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ssloy/tinyrenderer/wiki&quot;&gt;How OpenGL works: software renderer in 500 lines of code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alehander42/hivemind&quot;&gt;hivemind&lt;/a&gt;. A prototype of a multi-syntax programming language..&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://herbsutter.com/2016/03/11/trip-report-winter-iso-c-standards-meeting/&quot;&gt;Trip report: Winter ISO C++ standards meeting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cityobservatory.org/what-filtering-can-and-cant-do/&quot;&gt;What filtering can and can’t do&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://kivikakk.ee/cryptography/2016/02/20/breaking-homegrown-crypto.html&quot;&gt;Breaking homegrown crypto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://edouard.peller.in/2016/03/12/screencasting-with-free-software.html&quot;&gt;Screencasting with free software&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2016/03/12/driving-the-new-american-century/&quot;&gt;Driving the new American century&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lexborisov.github.io/myhtml/&quot;&gt;MyHTML — HTML Parser on Pure C with POSIX Threads Support&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.oxplot.com/the-art-of-barebackness/&quot;&gt;The Art of Barebackness&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/kachayev/21e7fe149bc5ae0bd878&quot;&gt;Channels Are Not Enough&lt;/a&gt;. Golang Concurrency Patterns for brave and smart.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/machinezone/tcpkali&quot;&gt;tcpkali&lt;/a&gt;. Fast multi-core TCP and WebSockets load generator.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.quantstart.com/articles/How-to-Learn-Advanced-Mathematics-Without-Heading-to-University-Part-1&quot;&gt;HOW TO LEARN ADVANCED MATHEMATICS WITHOUT HEADING TO UNIVERSITY - PART 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://openapis.org/&quot;&gt;Open API Initiative&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jamesfriend.com.au/pce-js/&quot;&gt;PCE.js&lt;/a&gt;. Mac Plus emulator running Mac OS System 7.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/IndieRobert/Common-Fundamental-Theorem-Of-Software-Development&quot;&gt;Common Fundamental Theorem Of Software Development&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tjheeta.github.io/2015/04/15/ansible-vs-chef/&quot;&gt;Ansible vs Chef&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.beepsend.com/2016/03/10/dealing-releases-single-page-applications/&quot;&gt;Dealing with releases of single page applications&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://brian-armstrong.github.io/quiet/&quot;&gt;Quiet&lt;/a&gt;. This library uses liquid SDR to transmit data through sound.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.catonmat.net/blog/frameworks-dont-make-sense/&quot;&gt;Frameworks don’t make much sense&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@crowquine/the-mindset-of-the-software-developer-2b8f64ee96e5#.afn3lg46o&quot;&gt;The mindset of the software developer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gitlab.com/higan/higan/tree/master/nall&quot;&gt;nall&lt;/a&gt;. Another STL-like/replacement.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://juditacs.github.io/2015/11/26/wordcount.html&quot;&gt;Counting words in different programming languages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Piper replaced Perforce at Google in 2012.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.wired.com/2015/09/google-2-billion-lines-codeand-one-place/&quot;&gt;Google Is 2 Billion Lines of Code—And It’s All in One Place&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://plus.google.com/+DominicMitchell/posts/DjABWzqp4kj&quot;&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://bazel.io/&quot;&gt;Bazel&lt;/a&gt; is a public version of Google’s internal build system.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://bitquabit.com/post/unorthodocs-abandon-your-dvcs-and-return-to-sanity/&quot;&gt;Unorthodocs: Abandon your DVCS and Return to Sanity&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.acolyer.org/2016/03/04/googles-hybrid-approach-to-research/&quot;&gt;Google’s Hybrid Approach to Research&lt;/a&gt; overview from The Morning Paper, and &lt;a href=&quot;https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/38149.pdf&quot;&gt;paper&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ecc-comp.blogspot.com/2015/05/a-brief-glance-at-how-5-text-editors.html&quot;&gt;A Brief Glance at How Various Text Editors Manage Their Textual Data&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.scaleway.com/2016/03/08/c2-insanely-affordable-x64-servers/&quot;&gt;C2: Insanely Affordable x86-64 Servers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.docker.com/2016/03/swarmweek-docker-swarm-exceeds-kubernetes-scale/&quot;&gt;Docker Swarm Exceeds Kubernetes Performance at Scale&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Mar 2016 22:03:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/12/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/12/recent-links.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/GSL&quot;&gt;GSL: Guidelines Support Library&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/unittest-cpp&quot;&gt;UnitTest++&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://code.woboq.org/&quot;&gt;Code Browser by Woboq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/49eyer/shimo_maven_for_c/&quot;&gt;Shimo - Maven for C++&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pocoproject.org/index.html&quot;&gt;POCO C++ Libraries&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pandoc.org/&quot;&gt;Pandoc: a universal document converter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/CocoaPods/CocoaPods/issues/4989#issuecomment-193772935&quot;&gt;Issues Cloning Spec repo - GitHub taking a very long time to download changes to the Specs Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://githubengineering.com/counting-objects/&quot;&gt;Counting Objects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=HxYFSlDdl0c&quot;&gt;Boris Kolpackov: New Build System for New C++&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codesynthesis.com/&quot;&gt;Code Synthesis&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.murrayc.com/permalink/2016/03/07/libsigc-3-0-very-variadic/&quot;&gt;libsigc++ 3.0: Very variadic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://buildroot.org/&quot;&gt;Buildroot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cacm.acm.org/magazines/2016/3/198849-a-differential-approach-to-undefined-behavior-detection/fulltext&quot;&gt;A Differential Approach to Undefined Behavior Detection&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.copperspice.com/docs/doxypress/index.html&quot;&gt;DoxyPress&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/48shrb/seriously_c_wtf/&quot;&gt;Seriously, C++, WTF?&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Mar 2016 21:07:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/08/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/08/recent-links.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>C++ standardization notes</title>
        <description>&lt;p&gt;The C++ standard has been a thing since 1998. In recent years, it’s been a concerted and ongoing effort, which
is great to see, since C++ is still the closest thing we have to the one true language.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/&quot;&gt;JTC1/SC22/WG21 - The C++ Standards Committee - ISOCPP&lt;/a&gt; is the
home of the C++ standards committee itself.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://isocpp.org&quot;&gt;https://isocpp.org&lt;/a&gt; web site is relatively new, but it is becoming the one-stop place
for information about the C++ standard.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://isocpp.org/std/the-committee&quot;&gt;The Committee: WG21&lt;/a&gt; is the group that oversees the evolution of the standard,
both language and libraries. They meet face-to-face two to three times a year, see &lt;a href=&quot;https://isocpp.org/std/meetings-and-participation&quot;&gt;Meetings and Participation&lt;/a&gt;. Having attended one of their quarterly week-long meetings (Jacksonville, FL), I have even more respect for the &lt;a href=&quot;https://isocpp.org/wiki/faq/wg21&quot;&gt;people involved&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://isocpp.org/files/papers/N4570.pdf&quot;&gt;June 2016 WG21 Meeting&lt;/a&gt; will be in Oulu, Finland from 20-June-2016
through 25-June-2016. It should be interesting, as we shephard our prototype paper from scary idea to something
that meets general approval.&lt;/p&gt;

&lt;p&gt;WG21 allows walk-in observers, but to be a voting member, you need to be a member of a national standards body that
ISO recognizes. For the US, this is ANSI. It’s slightly unclear to me how much this costs. I assume this is ANSI
in the US, but the &lt;a href=&quot;http://publicaa.ansi.org/sites/apdl/Documents/Membership/Company_Application.pdf&quot;&gt;ANSI Company Membership Application 2016&lt;/a&gt; quote a basic membership cost of $995 whereas the
&lt;a href=&quot;https://isocpp.org/std/meetings-and-participation&quot;&gt;Meetings and Participation&lt;/a&gt; quotes $1995. For a large company,
it’s upwards of $30K/year, so you need to be serious about it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://isocpp.org/std/iso-iec-jtc1-procedures&quot;&gt;ISO/IEC JTC1 Procedures&lt;/a&gt; details how the ISO C++ committee operates, relative to ISO and IEC. USNC/IEC is the specific section of ANSI that this falls under, at least for the US.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://standards.incits.org/a/public/group/pl22.16&quot;&gt;PL22.16 - Programming Language C++&lt;/a&gt; is the US group that
corresponsds to SC22/WG21.&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Mar 2016 09:24:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/07/cpp-standardization-notes.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/07/cpp-standardization-notes.html</guid>
        
        <category>programming</category>
        
        <category>C++</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/DeveloperTools/Reference/XcodeBuildSettingRef/1-Build_Setting_Reference/build_setting_ref.html&quot;&gt;Xcode Build Setting Reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@porteneuve/mastering-git-submodules-34c65e940407#.xeztcwrmv&quot;&gt;Mastering Git submodules&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Submodules&quot;&gt;7.11 Git Tools - Submodules&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ninja-build.org/&quot;&gt;Ninja&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://llvm.org/docs/CMake.html&quot;&gt;Building LLVM with CMake&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.monobjc.net/xcode-project-file-format.html&quot;&gt;Xcode Project File Format&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/&quot;&gt;JTC1/SC22/WG21 - Papers 2016 &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/a/isocpp.org/forum/#!topic/sg14/uMgfM-ZKi7k&quot;&gt;Continuing thinking around p0235 packaging system for c++&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/a/isocpp.org/forum/#!forum/sg14&quot;&gt;SG14 - Game Dev and Low Latency&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.git-tower.com/blog/diff-tools-mac/&quot;&gt;Diff Tools on Mac OS X&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/olafvdspek/ctemplate&quot;&gt;ctemplate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2548075/c-string-template-library&quot;&gt;C++ string template library&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cantrip.org/rust-vs-c++.html&quot;&gt;Rust vs. C++: Fine-grained Performance&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Mar 2016 00:15:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/07/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/07/recent-links.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://mvogt.wordpress.com/2014/04/04/apt-1-0/&quot;&gt;apt 1.0&lt;/a&gt;. Evidently apt was in beta all this time? apt is Debian’s high-level packaging tool, and stands for “A Package Tool”. dpkg is the package management
system itself. And then Aptitude and Synaptic are front-ends to apt itself. It’s turtles.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;Docset Direct Download Links&lt;/a&gt;
&lt;a href=&quot;https://kapeli.com/dash&quot;&gt;Dash&lt;/a&gt; is an offline API documentation browser for OS X and iOS. Looks interesting.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://sunaku.github.io/dasht/man/man0/README.html&quot;&gt;dasht&lt;/a&gt; is a command-line version.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://kapeli.com/docset_links&quot;&gt;Docset Direct Download Links&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://haneefmubarak.com/2016/02/25/assembly-optimizations-i-un-packing-structures/&quot;&gt;Assembly Optimizations I: (Un)Packing Structures&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://eli.thegreenplace.net/2016/returning-multiple-values-from-functions-in-c/&quot;&gt;Returning multiple values from functions in C++&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://developers.redhat.com/blog/2016/02/29/why-cstdlib-is-more-complicated-than-you-might-think/&quot;&gt;Why &amp;lt; cstdlib &amp;gt; is more complicated than you might think&lt;/a&gt;. Good article if you approach it from the point of view of “GNU C standard library” and not “any C Standard Library”.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.codinghorror.com/we-hire-the-best-just-like-everyone-else/&quot;&gt;We Hire the Best, Just Like Everyone Else&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lambda-the-ultimate.org/node/5313&quot;&gt;Why not C++?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/docs/Introduction%20to%20type%20and%20resource%20safety.pdf&quot;&gt;A brief introduction to C++’s model for type- and resource-safety&lt;/a&gt;. Bjarne Stroustrup, Herb Sutter, Gabriel Dos Reis.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jeroenpelgrims.com/pushing-to-dokku-from-gitlab-ci/&quot;&gt;Pushing to Dokku from GitLab CI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/joowani/dtags&quot;&gt;DTags - Directory Tags for Lazy Programmers.&lt;/a&gt;. I wish there was a good shell for Windows.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yrp604/rappel&quot;&gt;yrp604/rappel&lt;/a&gt;. A linux-based assembly REPL for x86, amd64, and armv7.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=IRTfhkiAqPw&quot;&gt;Object-Oriented Programming is Embarrassing: 4 Short Examples&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://llvm.linuxfoundation.org/index.php/Main_Page&quot;&gt;LLVMLinux&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://lwn.net/Articles/322823/&quot;&gt;ext4 and data loss&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dranger.com/ffmpeg/&quot;&gt;An ffmpeg and SDL Tutorial&lt;/a&gt;. How to Write a Video Player in
Less Than 1000 Lines.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp&quot;&gt;Let’s code a TCP/IP stack, 1: Ethernet &amp;amp; ARP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lazyfoo.net/tutorials/SDL/index.php&quot;&gt;Beginning Game Programming v2.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://svpow.com/2016/03/04/sci-hub-is-a-scholarly-litmus-test/&quot;&gt;Sci-Hub is a scholarly litmus test&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codersnotes.com/notes/cpp-rant-1/&quot;&gt;Ill-Advised C++ Rant, Part 1&lt;/a&gt; and &lt;a href=&quot;http://www.codersnotes.com/notes/cpp-rant-2/&quot;&gt;Ill-Advised C++ Rant, Part 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.archive.org/2016/03/04/saving-500-apple-ii-programs-from-oblivion/&quot;&gt;Saving 500 Apple II Programs from Oblivion&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tj/luna&quot;&gt;luna&lt;/a&gt;. Luna is an expressive, minimalistic, elegant programming language implemented in C.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://trafficways.org/ascii/ascii.pdf&quot;&gt;The Evolution of Character Codes, 1874-1968&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://msm.runhello.com/p/1003&quot;&gt;No Compiler&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://denninginstitute.com/pjd/GP/GP-site/welcome.html&quot;&gt;GREAT PRINCIPLES OF COMPUTING&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Mar 2016 08:33:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/06/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/06/recent-links.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>C++ things to write</title>
        <description>&lt;p&gt;Write a C++ source highighter that uses Clang to identify the various
syntactic and semantic elements.&lt;/p&gt;

&lt;p&gt;Write a web template/blog engine in C++.&lt;/p&gt;

&lt;p&gt;Turn Clang into a two-pass compiler so that forward declarations aren’t
needed any more. Do templates make this impossible? Find out.&lt;/p&gt;

&lt;p&gt;Find a way to get rid of most/all of the undefined and unspecified
behavior in the C++ standard.&lt;/p&gt;

&lt;p&gt;Find all the usable C and C++ source in the world, catalog it, and make it
available for use.&lt;/p&gt;

&lt;p&gt;Solve text encoding.&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Mar 2016 11:30:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/03/things-to-write.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/03/things-to-write.html</guid>
        
        <category>programming</category>
        
        <category>design</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://robots.thoughtbot.com/the-magic-behind-configure-make-make-install&quot;&gt;The magic behind configure, make, make install&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Configure_script&quot;&gt;configure script&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://airs.com/ian/configure/configure_toc.html&quot;&gt;The GNU configure and build system&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://marmelab.com/blog/2016/02/29/auto-documented-makefile.html&quot;&gt;Self-Documented Makefile&lt;/a&gt; and &lt;a href=&quot;https://news.ycombinator.com/item?id=11195539&quot;&gt;discussion&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://nicholasjackson.github.io/microservices/go/building-and-testing-microservices-part1/&quot;&gt;0 to Microservice in 5 minutes with Go, go-microservice-template and Minke&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.iar.com/support/resources/articles/advanced-preprocessor-tips-and-tricks/&quot;&gt;Advanced preprocessor tips and tricks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=11198329&quot;&gt;Ask HN: Is it possible to live off technical writing?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://llogiq.github.io/2016/02/28/java-rust.html&quot;&gt;Comparing Rust and Java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://failedevolution.blogspot.com/2015/10/stephen-hawking-confirms-problem-is.html&quot;&gt;Stephen Hawking confirms: The problem is Capitalism, not robots!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mirage.io/blog/introducing-functoria&quot;&gt;Introducing Functoria&lt;/a&gt;. MirageOS for microkernels/unikernels&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ilikebigbits.com/blog/2016/2/28/error-context-better-logging-with&quot;&gt;Error Context - a stack trace for data&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pythontutor.com/&quot;&gt;VISUALIZE Python, Java, JavaScript, TypeScript, Ruby, C, and C++ programs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://makers.airware.com/open-source/this-blog/&quot;&gt;Airware - this blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.blog.pythonlibrary.org/2016/03/01/python-101-all-about-imports/&quot;&gt;Python 101: All about imports&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@bertrandom/unfundable-slack-bots-9369a75fdd#.nuomxx68y&quot;&gt;Unfundable Slack bots&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://eng.uber.com/go-geofence/&quot;&gt;HOW WE BUILT UBER ENGINEERING’S HIGHEST QUERY PER SECOND SERVICE USING GO&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.gitkraken.com/&quot;&gt;GitKracken&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zachholman.com/posts/deploying-software&quot;&gt;How to Deploy Software&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Mar 2016 23:42:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/01/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/01/recent-links.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>C++ Package Management notes</title>
        <description>&lt;p&gt;How should a package system for C++ work?&lt;/p&gt;

&lt;p&gt;Here’s one ideal&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;quot;curl&amp;quot; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// this is a package&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// this is a system header&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CurlGet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Download file&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Download argv[1] into a std::string&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CurlGet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is a real program, except for one small detail.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;quot;curl&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In an ideal world, this is all you would need to use Curl in your program; no
downloading installing a Curl distribution, no adding of search path and linker
entries to a makefile or other build system artifact.&lt;/p&gt;

&lt;p&gt;The function &lt;code&gt;CurlGet&lt;/code&gt; isn’t from the curl package, it’s my code. I separated it
out just to make it clearer. Here it is, for completeness’ sake. Put this together
with the code above and a compiler that supports packages, and you get this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;WriteStdString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nmemb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nmemb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Add this new chunk to the string. Yes, ugly, writing into a string buffer.&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;memcpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CurlGet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reserve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// reserve enough for a moderate sized file&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;curl_global_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CURL_GLOBAL_DEFAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;curl_easy_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;curl_easy_setopt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CURLOPT_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;curl_easy_setopt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CURLOPT_WRITEFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WriteStdString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;curl_easy_setopt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CURLOPT_WRITEDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;curl_easy_setopt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CURLOPT_USERAGENT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;packagedemo/1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;curl_easy_perform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;cm&quot;&gt;/* should really check result, eh? */&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;curl_easy_cleanup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;curl_global_cleanup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In our current world, if you have a computer without Curl on it, and are not
running an operating system where Curl has been packaged up for you to grab,
you’re in for an hour to a day of finding Curl source, building it, and then
adding it to your program.&lt;/p&gt;

&lt;p&gt;So how can we get closer to this ideal world?&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Mar 2016 13:30:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/01/cpp-package-management-notes.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/01/cpp-package-management-notes.html</guid>
        
        <category>programming</category>
        
        <category>C++</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Barycentric Coordinate Time</title>
        <description>&lt;p&gt;We have half of a better computer timestamp system. Barycentric Coordinate time, or TCB, is defined
as the SI second, duration of radiation periods of cesium centered at the spacetime coordinate of
the geocenter of the solar system at 1977 January 1, 0h 0m 32s.184 TAI; in other words, an atomic clock
centered here starting at the given time would count TCB time. This time was picked to provide a bridge
between current standards and TCB time.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dl.yazdanpress.com/BOOKS/PHYSICS/Time_From_Earth_Rotation_to_Atomic_Physics(marked).pdf&quot;&gt;Time: from Earth Rotation to Atomic Physics&lt;/a&gt;, page 118.&lt;/p&gt;

&lt;p&gt;I further propose that for computer timestamps, we use integers of the duration of radiation periods
of cesium, which is precisely 9,192,631,770 ticks per second. There are transforms for general
relativity to treat this properly for any point in the solar system, and we should be able to
extend it beyond the solar system as we start travelling, without too much effort (relative to the
effort of actually travelling beyond the solar system, of course). A 96-bit integer can hold a comfortably
large range (273 billion years), and a 128-bit value would be able to date every event in the lifetime
of the universe, at least as we currently understand it,
A 64-bit value can only hold a timespan of 63 years at this tick rate, so that would be infeasible, although
maybe acceptable in specific use cases.&lt;/p&gt;

&lt;p&gt;Note that TCG, or Geocentric Coordinate Time, was also defined at this point, and there is a (admittedly nonlinear)
transformation between TCG and TCB. But we don’t want to be using TCG time, as this is Earth-centric, and
some software we are writing now will almost certainly be used other than on or around Earth.&lt;/p&gt;

&lt;p&gt;Also note that other clocks than cesium are being considered; if someday we switch to a higher-resolution clock,
there would be a simple linear transform, since almost certainly that system will hold onto the SI second.&lt;/p&gt;

&lt;p&gt;Finally, we will probably have Mars Time, Moon Time etc alongside Terrestrial Time, further complicating things
and thus further driving home the point that computer timestamps should switch to TCB time now.&lt;/p&gt;

&lt;p&gt;So, to summarize, a modern computer timestamp is&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a 128 bit value (96-bit is optional but could cover most time ranges)&lt;/li&gt;
  &lt;li&gt;zero at 1977 January 1, 0h 0m 32.184s&lt;/li&gt;
  &lt;li&gt;clock located at the geocenter of the solar system&lt;/li&gt;
  &lt;li&gt;tick count is 9,192,631,770 ticks/second&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a bridge from UTC to TAI to TCB. I don’t care at all about civil time, or rather I don’t want to be
measuring time events in civil time (calendars and the like). TCB is irrelevant of geographical concerns.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/International_Atomic_Time&quot;&gt;International Atomic Time&lt;/a&gt;, TAI time&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Geocentric_Coordinate_Time&quot;&gt;Geocentric Coordinate Time&lt;/a&gt;, TCG time&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Barycentric_Coordinate_Time&quot;&gt;Barycentric Coordinate Time&lt;/a&gt;, TCB time&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Feb 2016 17:32:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/02/22/barycentric-coordinate-time.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/02/22/barycentric-coordinate-time.html</guid>
        
        <category>programming</category>
        
        <category>design</category>
        
        
        <category>dev</category>
        
      </item>
    
  </channel>
</rss>

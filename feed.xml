<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Some Things Are Obvious</title>
    <description>Answers to some of the world&#39;s questions
</description>
    <link>http://neurocline.github.io/</link>
    <atom:link href="http://neurocline.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 12 May 2015 18:27:01 -0700</pubDate>
    <lastBuildDate>Tue, 12 May 2015 18:27:01 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Git Merge 2015</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/GitMerge2015.jpg&quot; alt=&quot;My helpful screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Watch these videos&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://git-merge.com/&quot;&gt;Git Merge 2015&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 12 May 2015 11:24:00 -0700</pubDate>
        <link>http://neurocline.github.io/git/2015/05/12/git-merge.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/git/2015/05/12/git-merge.html</guid>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://community.qualys.com/thread/12315&quot;&gt;Can’t get OCSP stapling to work, despite openssl working fine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.thawte.com/assets/documents/whitepaper/ocsp-stapling.pdf&quot;&gt;Guide to OCSP Stapling&lt;/a&gt; - Thawte.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Revocation_list&quot;&gt;Revocation list&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Kerberos_(protocol)&quot;&gt;Kerberos (protocol)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/OCSP_stapling&quot;&gt;OCSP Stapling&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol&quot;&gt;Online Certificate Status Protocol&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.imperialviolet.org/2011/03/18/revocation.html&quot;&gt;Revocation doesn’t work&lt;/a&gt; - from March 2011.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.imperialviolet.org/2014/04/19/revchecking.html&quot;&gt;No, don’t enable revocation checking&lt;/a&gt; - from April 2014&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tools.ietf.org/html/draft-hallambaker-muststaple-00&quot;&gt;X.509v3 Extension: OCSP Stapling Required&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-websec-key-pinning-21&quot;&gt;Public Key Pinning Extension for HTTP&lt;/a&gt; - this is known as HPKP. Chrome does this and pre-loaded pins.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.certificate-transparency.org/&quot;&gt;Certificate Transparency&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.webupd8.org/2011/02/how-to-boot-iso-with-grub2-easy-way.html&quot;&gt;HOW TO BOOT AN ISO WITH GRUB2 (THE EASY WAY!)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lifehacker.com/5042630/unetbootin-creates-usb-bootable-linux-the-easy-way&quot;&gt;UNetbootin Creates USB-Bootable Linux the Easy Way&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.instructables.com/id/Make-Your-Regular-Mac-a-NetBoot-Server!/&quot;&gt;Make Your Regular Mac a NetBoot Server!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mike.passwall.com/macnc/macosxs.html&quot;&gt;Netbooting Mac&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://technet.microsoft.com/en-us/library/ee619754(WS.10).aspx&quot;&gt;How Certificate Revocation Works&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cise.ufl.edu/~bates/documents/Bates_Ccs14.pdf&quot;&gt;Securing SSL Certificate Verification through Dynamic Linking&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.feistyduck.com/&quot;&gt;Feisty Duck&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jayway.com/2014/09/03/creating-self-signed-certificates-with-makecert-exe-for-development/&quot;&gt;Creating self signed certificates with makecert.exe for development&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.serverframework.com/ServerFramework/latest/Docs/examples-schannelechoserver.html&quot;&gt;Example Servers - SChannel Echo Server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.coastrd.com/tls-with-schannel&quot;&gt;TLS with Schannel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.coastrd.com/c-schannel-smtp&quot;&gt;C++ SSPI Schannel TLS example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.certificate-transparency.org/log-proofs-work&quot;&gt;How Log Proofs Work&lt;/a&gt; - Merkle hash trees and proving entries are in logs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.emsec.rub.de/media/crypto/attachments/files/2011/04/becker_1.pdf&quot;&gt;Merkle Signature Schemes, Merkle Trees and Their Cryptanalysis&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;books-i-want-to-get&quot;&gt;Books I want to get&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Bulletproof-SSL-TLS-Understanding-Applications/dp/1907117040/&quot;&gt;Bulletproof SSL and TLS&lt;/a&gt; by Ivan Ristic. For some reason this is super-expensive from Amazon, cheaper to get it direct from Feisty Duck.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/SSL-TLS-Designing-Building-Systems/dp/0201615983&quot;&gt;SSL and TLS: Designing and Building Secure Systems&lt;/a&gt; by Eric Rescorla. Old but still good.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Implementing-SSL-TLS-Using-Cryptography/dp/0470920416/&quot;&gt;Implementing SSL / TLS Using Cryptography and PKI&lt;/a&gt; by Joshau Davies.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Network-Security-OpenSSL-John-Viega/dp/059600270X/&quot;&gt;Network Security with OpenSSL&lt;/a&gt; by John Viega.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Secure-Programming-Cookbook-Cryptography-Authentication/dp/0596003943/&quot;&gt;Secure Programming Cookbook for C and C++&lt;/a&gt; by John Viega.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Cryptography-Engineering-Principles-Practical-Applications/dp/0470474246/&quot;&gt;Cryptography Engineering: Design Principles and Practical Applications&lt;/a&gt; by Niels Furguson, Bruce Schneier, Tadayoshi Kohno.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Introduction-Cryptography-Edition-Chapman-Security/dp/1466570261/&quot;&gt;Introduction to Modern Cryptography, Second Edition&lt;/a&gt; by Jonathan Katz, Yehuda Lindell.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 May 2015 07:39:00 -0700</pubDate>
        <link>http://neurocline.github.io/links/2015/05/12/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/links/2015/05/12/recent-links.html</guid>
        
        
        <category>links</category>
        
      </item>
    
      <item>
        <title>Stream ciphers</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/RC4.jpg&quot; alt=&quot;My helpful screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Stream ciphers are an approximation of one-time pads. RC4 is the most well-known
stream cipher, but on the edge of being insecure now.&lt;/p&gt;

&lt;h2 id=&quot;general&quot;&gt;General&lt;/h2&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/Stream_cipher&quot;&gt;Stream cipher&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tech-faq.com/block-and-stream-ciphers.html&quot;&gt;Block and Stream Ciphers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cosic.esat.kuleuven.be/publications/thesis-124.pdf&quot;&gt;CRYPTANALYSIS AND DESIGN OF SYNCHRONOUS
STREAM CIPHERS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.burtleburtle.net/bob/hash/index.html&quot;&gt;Hash Functions and Block Ciphers&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;rc4&quot;&gt;RC4&lt;/h2&gt;

&lt;p&gt;RC4 is the official algorithm, designed by Ron Rivest in 1987. It was initially a
trade secret, but an anonymous poster publishe a description of it to the Cipherpunks
mailing list. The algorithm derived from that description was known as ARC4, for 
“Alleged RC4” (because RC4 was registered as a trademark by RSA). RC4 was historically
widely used in TLS, although now prohibited as of RFC 7465.&lt;/p&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;https://en.wikipedia.org/wiki/RC4&quot;&gt;RC4&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;spritz&quot;&gt;Spritz&lt;/h2&gt;

&lt;p&gt;Spritz is a 2014 upgrade of RC4 by Rivest and Schuldt.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.schneier.com/blog/archives/2014/10/spritz_a_new_rc.html&quot;&gt;Spritz: A New RC4-Like Stream Cipher&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://people.csail.mit.edu/rivest/pubs/RS14.pdf&quot;&gt;Spritz—a spongy RC4-like stream cipher and hash function&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;salsa20&quot;&gt;Salsa20&lt;/h2&gt;

&lt;p&gt;Salsa20 was designed by Daniel J. Bernstein.&lt;/p&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/Salsa20&quot;&gt;Salsa20&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;chacha20&quot;&gt;ChaCha20&lt;/h2&gt;

&lt;p&gt;ChaCha20, closely related to Salsa20, was also designed by Daniel J. Bernstein, and might be slightly more secure than Salsa20. Google is now using this for Android.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.infosecurity-magazine.com/news/google-swaps-out-crypto-ciphers-in-openssl/&quot;&gt;Google Swaps Out Crypto Ciphers in OpenSSL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tools.ietf.org/html/draft-nir-cfrg-chacha20-poly1305-02&quot;&gt;ChaCha20 and Poly1305 for IETF protocols&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;sosemanuk&quot;&gt;SOSEMANUK&lt;/h2&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/SOSEMANUK&quot;&gt;SOSEMANUK&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ecrypt.eu.org/stream/p3ciphers/sosemanuk/sosemanuk_p3.pdf&quot;&gt;Sosemanuk, a fast software-oriented stream cipher&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;isaac&quot;&gt;ISAAC&lt;/h2&gt;

&lt;p&gt;Designed by Robert Jenkins (“burtlebob”) in 1996, and used in a handful of places,
including inside GNU Coreutils.&lt;/p&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/ISAAC_(cipher)&quot;&gt;ISAAC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.burtleburtle.net/bob/rand/isaacafa.html&quot;&gt;ISAAC: a fast cryptographic random number generator&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;phelix&quot;&gt;Phelix&lt;/h2&gt;

&lt;p&gt;Designed by Doug Whiting, Bruce Schneier, Stefan Lucks, and Frédéric Muller.&lt;/p&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/Phelix&quot;&gt;Phelix&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.schneier.com/paper-helix.pdf&quot;&gt;Helix: Fast Encryption and Authentication in a Single Cryptographic Primitive&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;solitaire&quot;&gt;Solitaire&lt;/h2&gt;

&lt;p&gt;Designed by Bruce Schneier for Neal Stephenson to use in the book Cryptonomicon.&lt;/p&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/Solitaire_(cipher)&quot;&gt;Solitaire&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;one-time-pads&quot;&gt;One-time pads&lt;/h2&gt;

&lt;p&gt;This is the gold standard, but hard to use in practice, except in specific use cases.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://users.telenet.be/d.rijmenants/en/onetimepad.htm&quot;&gt;One-time Pad&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.schneier.com/blog/archives/2015/04/cell_phone_opse.html&quot;&gt;Cell Phone Opsec&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 12 May 2015 04:34:00 -0700</pubDate>
        <link>http://neurocline.github.io/encryption/2015/05/12/stream-ciphers.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/encryption/2015/05/12/stream-ciphers.html</guid>
        
        
        <category>encryption</category>
        
      </item>
    
      <item>
        <title>SSL/TLS Implementations</title>
        <description>&lt;h2 id=&quot;botan&quot;&gt;Botan&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://botan.randombit.net/&quot;&gt;Botan home page&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/randombit/botan&quot;&gt;botan mirror on github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Strictly speaking, Botan is a general-purpose crypto library, but has a
TLS implementation. Source is kept in Monotone, but there is a Github
mirror. Botan has had continuous development since 2001. Is it safe to
use in a commercial product? Good question.&lt;/p&gt;

&lt;p&gt;It builds on Unix/POSIX and Microsoft Windows. There are instructions for
both iOS and Android builds referenced in the documentation.&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/Botan_(programming_library)&quot;&gt;Botan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tstarling.com/blog/2014/04/ssl-implementations-compared/&quot;&gt;SSL implementations compared&lt;/a&gt; - although this is really about coding style.&lt;/li&gt;
  &lt;li&gt;Stack Overflow - &lt;a href=&quot;http://stackoverflow.com/questions/4236526/looking-for-a-high-level-c-ssl-library&quot;&gt;Looking for a High Level C++ SSL Library&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://panthema.net/2008/0714-cryptography-speedtest-comparison/&quot;&gt;Speedtest and Comparsion of Open-Source Cryptography Libraries and Compiler Flags&lt;/a&gt; - by the author of CryptoTE.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://archive.is/mstSu&quot;&gt;SSL and TLS&lt;/a&gt; - sample from old Botan manual&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cryptosource.de/docs/mceliece_in_botan.pdf&quot;&gt;Botan’s Implementation of the McEliece PKC&lt;/a&gt; - cryptography resilient against quantum computers?&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.codeitive.com/0miVjWPVVj/building-the-botan-library-for-ios7-arm64.html&quot;&gt;Building the Botan library for ios7 arm64&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;openssl&quot;&gt;OpenSSL&lt;/h2&gt;

&lt;h3 id=&quot;reference-1&quot;&gt;Reference&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://funcptr.net/2012/04/08/openssl-as-a-filter-(or-non-blocking-openssl)/&quot;&gt;OpenSSL As A Filter (Or Non-Blocking OpenSSL)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.openssl.org/index.php/Related_Links&quot;&gt;OpenSSL Related Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;libressl&quot;&gt;LibreSSL&lt;/h2&gt;

&lt;p&gt;LibreSSL is a fork of OpenSSL done by the OpenBSD folks as a security-focused rewrite.
There is a new library coming called ressl, for reimagined SSL.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.libressl.org/&quot;&gt;LibreSSL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tedunangst.com/flak/post/goreSSL&quot;&gt;goreSSL&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;schannel&quot;&gt;Schannel&lt;/h2&gt;

&lt;p&gt;Secure Channel or Schannel is the name of Microsoft’s SSL implementation,
implemented as an SSP in their Security Support Provider Interface.&lt;/p&gt;

&lt;h3 id=&quot;reference-2&quot;&gt;Reference&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms678421(v=vs.85).aspx&quot;&gt;Schannel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa380123(v=vs.85).aspx&quot;&gt;Secure Channel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa374752(v=vs.85).aspx&quot;&gt;Certificate Stores&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blogs.msdn.com/b/kaushal/archive/2012/10/06/ssl-tls-alert-protocol-amp-the-alert-codes.aspx&quot;&gt;SSL/TLS Alert Protocol &amp;amp; the Alert Codes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa376210(v=vs.85).aspx&quot;&gt;Cryptography API: Next Generation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.codeproject.com/Articles/1600/CSslSocket-SSL-TLS-enabled-CSocket&quot;&gt;CSslSocket - SSL/TLS enabled CSocket&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/aa384076.aspx&quot;&gt;SSL in WinHTTP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://social.msdn.microsoft.com/Forums/en-US/69060634-9209-47d2-a03c-05042906af73/how-to-add-sni-client-hello-extension-using-schannel-api?forum=windowssecurity&quot;&gt;How to add SNI client hello extension using Schannel API?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/7464860/ssl-with-winhttp&quot;&gt;SSL with WinHTTP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa378740(v=vs.85).aspx&quot;&gt;Manually Validating Schannel Credentials&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/bb931357(v=vs.85).aspx&quot;&gt;CryptoAPI Cryptographic Service Providers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;secure-transport&quot;&gt;Secure Transport&lt;/h2&gt;

&lt;p&gt;Secure Transport is Darwin/Mac OS X’s name for SSL. Modern features are only supported
in Mac OS X 10.8 or later. Also annoyingly, you must put certificates in the Keychain
instead of bundling them with your program. But it’s open source under the APSL 2.0
license.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Security/Reference/secureTransportRef/&quot;&gt;Secure Transport Reference&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;polarssl&quot;&gt;PolarSSL&lt;/h2&gt;

&lt;h3 id=&quot;reference-3&quot;&gt;Reference&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tls.mbed.org/tech-updates/blog/polarssl-part-of-arm&quot;&gt;PolarSSL is now a part of ARM&lt;/a&gt; - and &lt;a href=&quot;https://news.ycombinator.com/item?id=8652019&quot;&gt;Hacker News comments&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;general&quot;&gt;General&lt;/h2&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/Comparison_of_TLS_implementations&quot;&gt;Comparison of TLS implementations&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note to self - don’t allow SSL renegotiation. &lt;a href=&quot;http://www.postgresql.org/message-id/51DE30DF.3080604@chittenden.org&quot;&gt;Re: SSL renegotiation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.feistyduck.com/books/openssl-cookbook/&quot;&gt;OpenSSL Cookbook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/9780596002701.do&quot;&gt;Network Security with OpenSSL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.keylength.com/&quot;&gt;Cryptographic Key Length Recommendation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://curl.haxx.se/docs/ssl-compared.html&quot;&gt;Compare SSL libraries&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hmurat.bilkent.edu.tr/27122014-cryptography-industry.pdf&quot;&gt;On the Uses of Cryptography in Industry&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.grc.com/sn/sn-449.htm&quot;&gt;Security Now podcast, episode 449&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;stuff-from-daniel-bernstein&quot;&gt;Stuff from Daniel Bernstein&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://ianix.com/pub/curve25519-deployment.html&quot;&gt;Things that use Curve25519&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cr.yp.to/ecdh.html&quot;&gt;A state-of-the-art Diffie-Hellman function&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ed25519.cr.yp.to/&quot;&gt;Ed25519: high-speed high-security signatures&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ianix.com/pub/ed25519-deployment.html&quot;&gt;Things that use Ed25519&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 11 May 2015 08:49:00 -0700</pubDate>
        <link>http://neurocline.github.io/ssl/2015/05/11/ssl-implementations.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/ssl/2015/05/11/ssl-implementations.html</guid>
        
        
        <category>ssl</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://panthema.net/2009/cryptote/&quot;&gt;CryptoTE&lt;/a&gt; - text editor that stores documents in encrypted containers.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://panthema.net/2010/stx-execpipe/&quot;&gt;STX Execution Pipe C++ Library&lt;/a&gt; - C++ abstraction of pipes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://conferences2.sigcomm.org/imc/2014/papers/p489.pdf&quot;&gt;Analysis of SSL Certificate Reissues and Revocations in the Wake of Heartbleed&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.kineticsystem.org/mingw&quot;&gt;Compile Graphics Magick, Boost, Botan and QT with MinGW64 under Windows 7 64&lt;/a&gt; - lengthy notes about building software with &lt;a href=&quot;http://www.mingw.org/&quot;&gt;MinGW&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 11 May 2015 08:49:00 -0700</pubDate>
        <link>http://neurocline.github.io/links/2015/05/11/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/links/2015/05/11/recent-links.html</guid>
        
        
        <category>links</category>
        
      </item>
    
      <item>
        <title>The Most Important Software Innovations</title>
        <description>&lt;p&gt;This makes for interesting reading&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dwheeler.com/innovation/innovation.html&quot;&gt;The Most Important Software Innovations&lt;/a&gt;, David Wheeler, last updated 2012-09-05.&lt;/p&gt;
</description>
        <pubDate>Mon, 11 May 2015 02:31:00 -0700</pubDate>
        <link>http://neurocline.github.io/development/2015/05/11/the-most-important-software-innovations.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/development/2015/05/11/the-most-important-software-innovations.html</guid>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>SSL/TLS Notes</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/TLS.jpg&quot; alt=&quot;My helpful screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;TLS (née SSL) is a big part of the modern computer landscape, but there
are no up-to-date reference materials. The few books written 10 years
ago are woefully out of date.&lt;/p&gt;

&lt;p&gt;Someone needs to write a new book or books. Some big areas to focus on
are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;updated history&lt;/li&gt;
  &lt;li&gt;certificates&lt;/li&gt;
  &lt;li&gt;cryptographic algorithms&lt;/li&gt;
  &lt;li&gt;best practices for security&lt;/li&gt;
  &lt;li&gt;working at scale&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think that interviewing all of the actors in the TLS world would be
an awesome step.&lt;/p&gt;

&lt;p&gt;More importantly, should the overall name be SSL, or TLS? Probably
SSL, since that’s very widespread at this point.&lt;/p&gt;

&lt;h2 id=&quot;tls&quot;&gt;TLS&lt;/h2&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/Transport_Layer_Security&quot;&gt;Transport Layer Security&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RFC5246 - &lt;a href=&quot;http://tools.ietf.org/html/rfc5246&quot;&gt;The Transport Layer Security (TLS) Protocol Version 1.2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RFC6176 - &lt;a href=&quot;http://tools.ietf.org/html/rfc6176&quot;&gt;Prohibiting Secure Sockets Layer (SSL) Version 2.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OWASP - &lt;a href=&quot;https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet&quot;&gt;Transport Layer Protection Cheat Sheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RFC5746 - &lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;Transport Layer Security (TLS) Renegotiation Indication Extension&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://support.globalsign.com/customer/portal/articles/1499561-sha-256-compatibility&quot;&gt;SHA-256 Compatibility&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ssllabs.com/downloads/SSL_TLS_Deployment_Best_Practices.pdf&quot;&gt;SSL/TLS Deployment Best Practices&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;certificates&quot;&gt;Certificates&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.zytrax.com/tech/survival/ssl.html&quot;&gt;Survival guides - TLS/SSL and SSL (X.509) Certificates&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Microsoft - &lt;a href=&quot;https://technet.microsoft.com/en-us/library/cc962078.aspx&quot;&gt;Benefits of Multiple-Level Certification Hierarchies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Stack Overflow - &lt;a href=&quot;http://stackoverflow.com/questions/20409534/how-does-an-ssl-certificate-chain-bundle-works&quot;&gt;How does an SSL certificate chain bundle works?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;stackoverflow - &lt;a href=&quot;http://stackoverflow.com/questions/2256950/openssl-ignore-self-signed-certificate-error&quot;&gt;OpenSSL Ignore Self-signed certificate error&lt;/a&gt;. Notes on how to verify certifications in OpenSSL&lt;/p&gt;

&lt;h2 id=&quot;certificate-authorities&quot;&gt;Certificate authorities&lt;/h2&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/Intermediate_certificate_authorities&quot;&gt;Intermediate certificate authorities&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://support.dnsimple.com/articles/what-is-ssl-certificate-chain/&quot;&gt;What is the SSL Certificate Chain?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/21319841/signing-certificate-with-another-certificate-signed-by-ca&quot;&gt;Signing certificate with another certificate signed by CA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://community.openvpn.net/openvpn/wiki/Using_Certificate_Chains&quot;&gt;Using Certificate Chains&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;github/zakjan - &lt;a href=&quot;https://github.com/zakjan/cert-chain-resolver&quot;&gt;Cert chain resolver&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;chain.com - &lt;a href=&quot;http://blog.chain.com/post/87136249186/how-we-keep-the-chain-api-secure&quot;&gt;How We Keep the Chain API Secure&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;see &lt;a href=&quot;https://chain.com/docs&quot;&gt;API v2 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://www.davidpashley.com/articles/becoming-a-x-509-certificate-authority/&quot;&gt;Becoming a X.509 Certificate Authority&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WikiHow - &lt;a href=&quot;http://www.wikihow.com/Be-Your-Own-Certificate-Authority&quot;&gt;How to Be Your Own Certificate Authority&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.area536.com/projects/be-your-own-certificate-authority-with-openssl/&quot;&gt;Be your own Certificate Authority&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Superuser - &lt;a href=&quot;http://superuser.com/questions/347588/how-do-ssl-chains-work&quot;&gt;How do SSL chains work?&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;public-key-pinning&quot;&gt;Public Key Pinning&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;HPKP - Public Key Pinning Extension for HTTP&lt;/li&gt;
  &lt;li&gt;HSTS - Force use of HTTPS&lt;/li&gt;
  &lt;li&gt;TACK - Public Key Pinning Extension&lt;/li&gt;
  &lt;li&gt;CRL - Certificate Revocation List&lt;/li&gt;
  &lt;li&gt;OCSP - Online Certificate Status Protocol&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mozilla - &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Public_Key_Pinning&quot;&gt;Public Key Pinning&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RFC7469 - &lt;a href=&quot;https://tools.ietf.org/html/rfc7469&quot;&gt;Public Key Pinning Extension for HTTP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mozilla - &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RFC6797 - &lt;a href=&quot;https://tools.ietf.org/html/rfc6797&quot;&gt;HTTP Strict Transport Security (HSTS)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ImperialVioet - &lt;a href=&quot;https://www.imperialviolet.org/2011/05/04/pinning.html&quot;&gt;IPublic key pinning (04 May 2011)&lt;/a&gt; - Chrome adding public key pinning. Use public key hashes, not certificate hashes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-websec-key-pinning-21&quot;&gt;Public Key Pinning Extension for HTTP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OWASP - &lt;a href=&quot;https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning&quot;&gt;Certificate and Public Key Pinning&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol&quot;&gt;Online Certificate Status Protocol&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tack.io/&quot;&gt;TACK, for pinning&lt;/a&gt; - Moxie Marlinspike&lt;/p&gt;

&lt;p&gt;Attack on Google detected via pinning&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://productforums.google.com/forum/#!topic/gmail/3J3r2JqFNTw/discussion&quot;&gt;Is This MITM Attack to Gmail’s SSL ?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://googleonlinesecurity.blogspot.com/2011/08/update-on-attempted-man-in-middle.html&quot;&gt;An update on attempted man-in-the-middle attacks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;security.stackexchange - &lt;a href=&quot;http://security.stackexchange.com/questions/29988/what-is-certificate-pinning&quot;&gt;What is certificate pinning?&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;websockets-and-ssl&quot;&gt;Websockets and SSL&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://security.stackexchange.com/questions/1034/can-javascript-flash-verify-the-ssl-connection-to-prevent-ssl-inspection&quot;&gt;Can Javascript/Flash verify the SSL connection to prevent “SSL Inspection”?&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;tls-srp&quot;&gt;TLS-SRP&lt;/h2&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/TLS-SRP&quot;&gt;TLS-SRP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wikipedia - &lt;a href=&quot;http://en.wikipedia.org/wiki/Secure_Remote_Password_protocol&quot;&gt;Secure Remote Password protocol&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RFC5054 - &lt;a href=&quot;https://tools.ietf.org/html/rfc5054&quot;&gt;Using the Secure Remote Password (SRP) Protocol for TLS Authentication&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 08 May 2015 05:33:00 -0700</pubDate>
        <link>http://neurocline.github.io/ssl/2015/05/08/ssl-notes.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/ssl/2015/05/08/ssl-notes.html</guid>
        
        
        <category>ssl</category>
        
      </item>
    
      <item>
        <title>Tesla&#39;s Powerwall Is A Game Changer</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/TeslaPowerwall.jpg&quot; alt=&quot;My helpful screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I watched the live stream of the announcement last week, and was blown away. Tesla is not
a natural born salesman; instead, he is smart, he believes in what he’s doing, and so far, everything
he’s promised bears out, there’s little smoke and mirrors in evidence. It doesn’t mean that he
will always succeed at what he’s doing, but that’s ok - if you don’t reach for big goals, you can’t
do great things.&lt;/p&gt;

&lt;p&gt;Ramez Naam thinks that this system is viable today in some countries (see graph above):&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://rameznaam.com/2015/04/30/tesla-powerwall-battery-economics-almost-there/&quot;&gt;Tesla Battery Economics: On the Path to Disruption&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The article has tons of links to other things you’ll want to read.&lt;/p&gt;

&lt;p&gt;One thing to keep in mind - even though most states in the US have buy-back of self-generated power
(the Net Metering laws), expect that to go away very soon. It did its job, it got people jump-started
using solar, and it’s going to kill the energy companies if it keeps up; not because we’re taking
their profit away, but because of the intermittent nature. Wait, hmm - even if consumers don’t buy
the Tesla Powerwall, utilities certainly could…&lt;/p&gt;

&lt;p&gt;And, the cost of batteries and solar will continue to drop. It’s hard to predict how rapidly they
will drop - some of the massive drop in the price of solar energy was inadvertently funded by
the Chinese government, as they gave massive funding to companies like Suntech. But those prices
stuck, indicating that there was massive innovation happening around the world.&lt;/p&gt;

&lt;p&gt;Some experts think that the Powerwall is being sold at a loss, at least for now. Since battery
technology is fairly mature and no startling breakthroughs have happened recently, this is
probably true unless there are controllable labor costs mixed into those estimates. But no
one expects prices to go up, and it’s pretty reasonable that prices will continue to drop.&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.teslamotors.com/powerwall&quot;&gt;Powewall&lt;/a&gt; - Tesla’s site.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.wired.com/2015/05/get-tesla-home-battery-let-physics-explain/&quot;&gt;Headline: Should You Get a Tesla Home Battery? Let Physics Explain&lt;/a&gt; - from Wired.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.theverge.com/2015/2/13/8033691/why-teslas-battery-for-your-home-should-terrify-utilities&quot;&gt;Why Tesla’s battery for your home should terrify utilities&lt;/a&gt; - from The Verge.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nature.com/news/will-tesla-s-battery-change-the-energy-market-1.17469&quot;&gt;Will Tesla’s battery change the energy market?&lt;/a&gt; - Nature.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.wsj.com/articles/will-teslas-newest-battery-pan-out-1430522030&quot;&gt;Will Tesla’s Newest Battery Pan Out?&lt;/a&gt; - the Wall Street Journal.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.forbes.com/sites/christopherhelman/2015/05/01/why-teslas-powerwall-is-just-another-toy-for-rich-green-people/&quot;&gt;Why Tesla’s Powerwall Is Just Another Toy For Rich Green People&lt;/a&gt; - Forbes.
This is an article that should have been retracted in its entirety, because as it got corrected,
its points dwindled away.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 May 2015 14:27:00 -0700</pubDate>
        <link>http://neurocline.github.io/energy/2015/05/03/tesla-powerwall.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/energy/2015/05/03/tesla-powerwall.html</guid>
        
        
        <category>energy</category>
        
      </item>
    
      <item>
        <title>Quadratic voting</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/QuadraticVoting.jpg&quot; alt=&quot;My helpful screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The influence of money in politics goes back thousands of years, and very likely longer. We
try to make institutions that can run properly, making good decisions. The American form
of government has done pretty well over the years, despite the influence of money (“buying votes”).&lt;/p&gt;

&lt;p&gt;Can we do better? Quadratic Voting is an attempt to do so. Basically, the cost of votes
goes up quadratically with the number of votes you cast. You can cast as many votes as
you want, but it will cost you.&lt;/p&gt;

&lt;p&gt;One of the coolest variants I heard, Quadratic Vote Buying, is quite simple: you can spend as
much money on votes as you want. All the voting money is returned equally to the whole voting
public (whether they voted or not). So, as an example, assume there are 10 voters, and I’m one
of them. Everyone except me casts 1 vote, and I cast 10 votes. My 10 votes cost me $100, and all
others pay $1 each for their 1 vote. At the end, each of us gets $10.90 returned. So I might
get my way, but you get my money to cushion the blow. And with a lot of voters, it’s still really
hard to get your way if it differs from the majority. In fact, that’s the point; in current systems
you can buy elections, in Quadratic Voting, it’s harder, but it’s allowed.&lt;/p&gt;

&lt;p&gt;I want to do my own explorations into this idea, but in the mean time, here are some
things you can read. Or the names you can Google include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Glen Weyl&lt;/li&gt;
  &lt;li&gt;Steven P. Lalley&lt;/li&gt;
  &lt;li&gt;Rory Sutherland&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first reference I saw to this was on Marginal Revolution, but it’s been around for
a while, I just missed hearing about it.&lt;/p&gt;

&lt;h3 id=&quot;articles&quot;&gt;Articles&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://ericposner.com/quadratic-voting/&quot;&gt;Quadratic Voting&lt;/a&gt;. Eric Posner piece written when
the Weyl/Lalley paper went up.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://marginalrevolution.com/marginalrevolution/2015/01/my-thoughts-on-quadratic-voting-and-politics-as-education.html&quot;&gt;My thoughts on quadratic voting and politics as education&lt;/a&gt;.
Tyler Cowen weighs in on QV.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.spectator.co.uk/features/9512322/humans-are-doing-democracy-wrong-bees-are-doing-it-right/&quot;&gt;Humans are doing democracy wrong. Bees are doing it right&lt;/a&gt;. Article in the
Spectator on learning from bees when it comes to voting.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://marginalrevolution.com/marginalrevolution/2015/05/square-dancing-bees-and-quadratic-voting.html&quot;&gt;Square Dancing Bees and Quadratic Voting&lt;/a&gt;. Article commenting on the Spectator article.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://freakonomics.com/2012/10/31/an-alternative-to-democracy/&quot;&gt;An Alternative to Democracy?&lt;/a&gt;. Freakonomics weighs in on Quadratic Voting.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slate.com/articles/news_and_politics/view_from_chicago/2013/06/new_york_s_bike_share_try_quadratic_vote_buying_to_figure_out_if_people.html&quot;&gt;The Good Way to Buy Votes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.law.uchicago.edu/node/16996&quot;&gt;Research Matters: Eric Posner on “Quadratic Vote Buying as Efficient Corporate Governance”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.overcomingbias.com/2015/01/collusion-in-quadratic-voting.html&quot;&gt;Collusion In Quadratic Voting&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;comments&quot;&gt;Comments&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=9477747&quot;&gt;Quadratic Voting - Hacker News&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.reddit.com/r/Economics/comments/34nn2r/quadratic_voting_an_economic_take_on_casting/&quot;&gt;Quadratic Voting - Reddit&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;papers&quot;&gt;Papers&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2003531&quot;&gt;Quadratic Voting&lt;/a&gt;. The 2014 paper
from Lalley and Weyl.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.valuewalk.com/2015/01/gauging-efficiency-quadratic-voting/&quot;&gt;Gauging the Efficiency of Quadratic Voting&lt;/a&gt;. Lalley and Weyl.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2343956&quot;&gt;Voting Squared: Quadratic Voting in Democratic Politics&lt;/a&gt;. Posner and Weyl.&lt;/p&gt;

&lt;h3 id=&quot;historical&quot;&gt;Historical&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://oll.libertyfund.org/titles/mandeville-the-fable-of-the-bees-or-private-vices-publick-benefits-2-vols&quot;&gt;The Fable of the Bees&lt;/a&gt;&lt;/em&gt;, Bernard Mandevill, 1714, 1732. Also see &lt;a href=&quot;http://en.wikipedia.org/wiki/The_Fable_of_the_Bees&quot;&gt;Wikipedia article&lt;/a&gt;. This  influenced Adam Smith and later John Maynard Keynes.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 May 2015 04:34:00 -0700</pubDate>
        <link>http://neurocline.github.io/politics/2015/05/03/quadratic-voting.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/politics/2015/05/03/quadratic-voting.html</guid>
        
        
        <category>politics</category>
        
      </item>
    
      <item>
        <title>Modernizing Emacs</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/ModernizeEmacs.jpg&quot; alt=&quot;My helpful screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Emacs and Vi have several claims to fame - they are both some of the longest-running
active software tools in history, and one of the longest-running rivalries in software.&lt;/p&gt;

&lt;p&gt;Here is a heart-felt request from an Emacs user on changes that Emacs should adopt
to be more relevant in today’s world:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ergoemacs.org/emacs/modernization.html&quot;&gt;Modernization of Emacs (Simple Changes Emacs Should Adopt)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s worth reading. I think it was first written in 2006 and then updated in 2013. The first
part of the article rambles, but the FAQ is where the important bits are.&lt;/p&gt;

&lt;p&gt;My favorite part of the article was the reminder that the Lisp Machine keyboard that Emacs was
first written for didn’t just have a Meta key - it had:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hyper&lt;/li&gt;
  &lt;li&gt;Super&lt;/li&gt;
  &lt;li&gt;Meta&lt;/li&gt;
  &lt;li&gt;Control&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Emacs used all those keys, and still supports super and hyper to this day. By default, Alt
on “modern” keyboards is the Meta key, but you can map keys to Hyper and Super if you want:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ergoemacs.org/emacs/emacs_hyper_super_keys.html&quot;&gt;Emacs: How to Define Super &amp;amp; Hyper Keys&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Crazy.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 May 2015 03:51:00 -0700</pubDate>
        <link>http://neurocline.github.io/editor/2015/05/03/modernizing-emacs.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/editor/2015/05/03/modernizing-emacs.html</guid>
        
        
        <category>editor</category>
        
      </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Some Things Are Obvious</title>
    <description>Answers to some of the world&#39;s questions
</description>
    <link>http://neurocline.github.io/</link>
    <atom:link href="http://neurocline.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 11 Aug 2015 20:54:10 -0700</pubDate>
    <lastBuildDate>Tue, 11 Aug 2015 20:54:10 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Recent Links</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://deconcentration-of-attention.com/&quot;&gt;Deconcentration of Attention: Addressing the Complexity of Software Engineering&lt;/a&gt; - interesting article on the complexity of software systems and the thinking that is required, and promoting the idea of deconcentration.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/danluu/post-mortems&quot;&gt;post-mortems&lt;/a&gt; - a hopefully growing collection of software project post-mortems, most of them modern.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dave.2heney.net/2015/08/08/performance-without-the-event-loop&quot;&gt;Performance without the event loop&lt;/a&gt; - good if basic talk on scalable software architecture and how Go fits in, mostly about network dispatch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dave.cheney.net/2015/06/09/gb-a-project-based-build-tool-for-the-go-programming-language&quot;&gt;gb, a project based build tool for the Go programming language&lt;/a&gt; - describes a project-centric build tool, meaning all your source (including vendor code) is present but clearly separated.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=10027102&quot;&gt;Ask HN: Books with a high signal to noise ratio?&lt;/a&gt; - a surprisingly good curated list of books.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://intelligence.org/files/PredictingAI.pdf&quot;&gt;How We’re Predicting AI—or Failing To&lt;/a&gt; - article by Stuart Armstrong and Kay Sotala analyzing all the (wrong so far) predictions about AI.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://intelligence.org/blog/&quot;&gt;MIRI blog&lt;/a&gt; - blog from Machine Intelligence Research Institute. Also see papers.&lt;/p&gt;

&lt;p&gt;A kerfluffle between Steven Pinker and Nicolas Nassim Taleb over Pinker’s book The Better Angels of
Our Nature (Pinker comes off the better):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.fooledbyrandomness.com/longpeace.pdf&quot;&gt;The “Long Peace” is a Statistical Illusion&lt;/a&gt; - Taleb’s attack on the book and Pinker.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stevenpinker.com/files/pinker/files/comments_on_taleb_by_s_pinker.pdf&quot;&gt;Fooled by Belligerence&lt;/a&gt; - Pinker responds to Taleb broadside.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://code.facebook.com/posts/321111638043166/hydrabase-the-evolution-of-hbase-facebook/&quot;&gt;HydraBase&amp;amp;emdash;The evolution of HBase@Facebook&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://devo.ps/blog/zookeeper-vs-doozer-vs-etcd/&quot;&gt;ZooKeeper vs. Doozer vs. Etcd&lt;/a&gt; - evaluating systems used to share configurtion across a cluster of servers. With &lt;a href=&quot;https://news.ycombinator.com/item?id=6366665&quot;&gt;commentary on Hacker News&lt;/a&gt;. TLDR: ZooKeeper complex and written in Java implementing Paxos, Doozer is dead, etcd is a very young project written in Go and implementing Raft.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.yahoo.com/blogs/hadoop/apache-zookeeper-making-417.html&quot;&gt;Apache ZooKeeper: the making of&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Youtube uses Zookeeper: see &lt;a href=&quot;http://godoc.org/code.google.com/p/vitess/go/zk/zkocc&quot;&gt;package zkocc&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=YbZ3zDzDnrw#t=1481&quot;&gt;Raft lecture&lt;/a&gt; on Youtube from John Osterhout. Probably more videos, look for them.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://arakoon.org/&quot;&gt;Arakoon&lt;/a&gt; is another distributed key-value store.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jasonwilder.com/blog/2014/02/04/service-discovery-in-the-cloud/&quot;&gt;Open-Source Service Discovery&lt;/a&gt;. Covers Zookeeper, Doozer and Etcd, but also looks at other solutions.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=9791739&quot;&gt;Good tech talks on Youtube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://media.defcon.org/DEF%20CON%2023/DEF%20CON%2023%20presentations/Speaker%20&amp;amp;%20Workshop%20Materials/Bruce%20Potter/DEFCON-23-Bruce-Potter-Hackers-Guide-to-Risk.pdf&quot;&gt;A Hacker’s Guide to Risk&lt;/a&gt; Talk at DefCon.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/chrislusf/seaweedfs&quot;&gt;Seaweed-FS&lt;/a&gt;. Simple and highly scalable distributed file system. Based off of Haystack.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf&quot;&gt;Finding a needle in a Haystack: Facebook’s photo storage&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.gahcep.com/cpp-internals-stl-vector-part-3/&quot;&gt;C++ Internals :: STL vector, Part III&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mqtt.org/&quot;&gt;MQTT&lt;/a&gt; is a machine-to machine connectivity protocol, intended to be very lightweight.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://bitbucket.org/knight666/utf8rewind/&quot;&gt;utf8rewind&lt;/a&gt; - the size of it seems insane.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3jg1AheF4n0&quot;&gt;Working Hard to Keep It Simple&lt;/a&gt; 2011 talk by Martin Odersky.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bbu/userland-slab-allocator&quot;&gt;Userland Slab Allocator&lt;/a&gt;. Uses bitvectors, looks interesting.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/uwplse/verdi/pull/16&quot;&gt;Verdi proves Raft correct&lt;/a&gt;. Verdi is a framework for formally verifying distributed systems using Coq. This is the pull request that contains the Raft verification.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://aphyr.com/posts/291-call-me-maybe-zookeeper&quot;&gt;Call me maybe: Zookeeper&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying&quot;&gt;The Log: What every software engineer should know about real-time data’s unifying abstraction&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://book.mixu.net/distsys/single-page.html&quot;&gt;Distributed systems for fun and profit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BKqgGpAOv1w&quot;&gt;Practicalities of Productionizing Distributed Systems&lt;/a&gt; Talk by Jeff Hodges at RICON West 2013.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://swtch.com/semaphore.pdf&quot;&gt;Semaphores in Plan 9&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pollenpub.com/&quot;&gt;How to make a book with Pollen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ruslanspivak.com/lsbasi-part2/&quot;&gt;Let’s Build a Simple Interpreter. Part 2.&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Aug 2015 11:49:00 -0700</pubDate>
        <link>http://neurocline.github.io/programming/2015/08/09/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/programming/2015/08/09/recent-links.html</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Consensus algorithms</title>
        <description>&lt;p&gt;I’m going to start talking about data replication, and the first and probably most
important topic is that of consensus algorithms. I don’t want to regurgitate what
others have written, so at first this is going to be a reading list. But, at some
point, it will contain original bits, and then all of this will turn into a bibliography.&lt;/p&gt;

&lt;h2 id=&quot;what-went-before&quot;&gt;What went before&lt;/h2&gt;

&lt;p&gt;Here are a handful of the papers I think are important.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/lamport/pubs/time-clocks.pdf&quot;&gt;Time, Clocks and the Ordering of Events in a Distributed System&lt;/a&gt;. 1978 - brilliant or obvious, or both, this provided a more formal description of partial orders (which is all we get in our universe where relativity applies).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;consensus-algorithms&quot;&gt;Consensus algorithms&lt;/h2&gt;

&lt;p&gt;This sub-field was launched with a paper from Lamport titled The Byzantine Generals Problem.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/lamport/pubs/byz.pdf&quot;&gt;The Byzantine Generals Problem&lt;/a&gt;. 1982 - making progress in the presence of conflicting information.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that state machine replication and consensus algorithms go together, and we’ll be diving
into that as well, since that’s the actual fun/hard work.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/State_machine_replication&quot;&gt;State machine replication&lt;/a&gt; on Wikipedia.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;pc---two-phase-commit&quot;&gt;2PC - two-phase commit&lt;/h2&gt;

&lt;p&gt;Yep.&lt;/p&gt;

&lt;h2 id=&quot;pc---three-phase-commit&quot;&gt;3PC - three-phase commit&lt;/h2&gt;

&lt;p&gt;Fixes the fragility of 2PC.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://the-paper-trail.org/blog/consensus-protocols-three-phase-commit/&quot;&gt;Consensus Protocols: Three-phase Commit&lt;/a&gt;. 2008.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;paxos&quot;&gt;Paxos&lt;/h2&gt;

&lt;p&gt;This was developed by Leslie Lamport in the late 1980s, circulated informally in the
community in the early 1990s, and finally formally published in Transactions on
Computer Systems in 1998. It is an improvement over 2PC and 3PC (two-phase commit and
three-phase commit).&lt;/p&gt;

&lt;p&gt;Paxos has the reputation of being complex, and developers are often warned against
implementing it themselves. This seems a little draconian or elitist to me.&lt;/p&gt;

&lt;p&gt;These are in publication order, but are starred with a reading order for those wanting
to understand Paxos.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Paxos_(computer_science)&quot;&gt;Paxos - Wikipedia&lt;/a&gt;. 2015 - recent version.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Papers&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/lamport/pubs/lamport-paxos.pdf&quot;&gt;The Part-Time Parliament&lt;/a&gt;. 1998 - the first Leslie Lamport paper on the Paxos algorithm.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/lamport/pubs/paxos-Simple.PDF&quot;&gt;Paxos Made Simple&lt;/a&gt;. 2001 - another paper from Lamport explaining Paxos, presumably in a fashion easier for some people to understand.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/pubs/64634/web-dsn-submission.pdf&quot;&gt;Cheap Paxos&lt;/a&gt;. 2004 - a version of Paxos that is cheaper (less work) when processors aren’t constantly failing.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://msr-waypoint.com/pubs/64624/tr-2005-112.pdf&quot;&gt;Fast Paxos&lt;/a&gt;. 2005 - paper by Lamport proposing a faster version of Paxos that learns in two message delays instead of three (but error-intolerant).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/pubs/64631/tr-2005-33.pdf&quot;&gt;Generalized Consensus and Paxos&lt;/a&gt;. 2005 - allow parallel execution of non-interfering commands.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/lamport/pubs/stoppable.pdf&quot;&gt;Stoppable Paxos&lt;/a&gt;. 2008.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/lamport/pubs/vertical-paxos.pdf&quot;&gt;Vertical Paxos and Primary-Backup Replication&lt;/a&gt;. 2009 - an exploration of the idea that valid master/slave replica systems are a variant of Paxos.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/lamport/pubs/disc-leaderless-web.pdf&quot;&gt;Leaderless Byzantine Paxos&lt;/a&gt;. 2011.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Blog articles&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://the-paper-trail.org/blog/consensus-protocols-paxos/&quot;&gt;Consensus Protocols: Paxos&lt;/a&gt;. 2009 - A fairly clear article from the Paper Trail blog on Paxos.&lt;/li&gt;
  &lt;li&gt;Understanding Paxos &lt;a href=&quot;https://distributedthoughts.wordpress.com/2013/09/22/understanding-paxos-part-1/&quot;&gt;Part 1&lt;/a&gt;, &lt;a href=&quot;https://distributedthoughts.wordpress.com/2013/09/30/understanding-paxos-part-2/&quot;&gt;Part 2&lt;/a&gt;. 2013 - pair of articles on Paxos.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://harry.me/blog/2014/12/27/neat-algorithms-paxos/&quot;&gt;Neat Algorithms - Paxos&lt;/a&gt;. 2014 - Javascript implementation from Harry Brundage.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cs.cornell.edu/courses/cs7412/2011sp/paxos.pdf&quot;&gt;Paxos Made Moderately Complex&lt;/a&gt;. 2015 - paper from Robbert van Renesse and Deniz Altinbuken talking about full reconfiguratble multidecree Paxos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Uses of Paxos&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Google: the &lt;a href=&quot;http://static.googleusercontent.com/media/research.google.com/en//archive/chubby-osdi06.pdf&quot;&gt;Chubby&lt;/a&gt; distributed lock service (&lt;a href=&quot;http://static.googleusercontent.com/media/research.google.com/en//archive/bigtable-osdi06.pdf&quot;&gt;BigTable&lt;/a&gt; uses Chubby).&lt;/li&gt;
  &lt;li&gt;Yahoo and ZooKeeper.&lt;/li&gt;
  &lt;li&gt;Heroku and Doozerd.&lt;/li&gt;
  &lt;li&gt;Amazon Web Services.&lt;/li&gt;
  &lt;li&gt;Cassandra and Nutanix.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.leonmergen.com/libpaxos-cpp/&quot;&gt;libpaxos-cpp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;raft&quot;&gt;Raft&lt;/h2&gt;

&lt;p&gt;Raft was developed as an easier-to-understand consensus algorithm, easier that Paxos, that is.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Raft_(computer_science)&quot;&gt;Raft&lt;/a&gt; on Wikipedia.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://thesecretlivesofdata.com/raft/&quot;&gt;The Secret Lives of Data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cl.cam.ac.uk/~ms705/pub/papers/2015-osr-raft.pdf&quot;&gt;Raft refloated - do we have consensus&lt;/a&gt;. 2015.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Facebook is using Raft in HydraBase, to replace HBase.&lt;/p&gt;

&lt;h2 id=&quot;names-in-consensus-algorithms&quot;&gt;Names in consensus algorithms&lt;/h2&gt;

&lt;p&gt;Major names&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.lamport.org/&quot;&gt;Leslie Lamport&lt;/a&gt;. Also wrote TLA+, and LaTeX.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/gray/&quot;&gt;Jim Gray&lt;/a&gt;. Two-tier transaction commit semantics, described ACID semantics.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/blampson/&quot;&gt;Butler Lampson&lt;/a&gt;. One of the key names for Xerox PARC and the Alto.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.pmg.csail.mit.edu/~liskov/&quot;&gt;Barbara Liskov&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implementors&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://harry.me/&quot;&gt;Harry Brundage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Henry Robinson &lt;a href=&quot;https://www.linkedin.com/in/henrynrobinson&quot;&gt;LinkedIn&lt;/a&gt;, &lt;a href=&quot;http://the-paper-trail.org/&quot;&gt;Paper Trail&lt;/a&gt;, &lt;a href=&quot;https://github.com/henryr&quot;&gt;henryr on Github&lt;/a&gt; - Cloudera, ZooKeeper.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 09 Aug 2015 03:18:00 -0700</pubDate>
        <link>http://neurocline.github.io/programming/2015/08/09/consensus-algorithms.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/programming/2015/08/09/consensus-algorithms.html</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Recent Links</title>
        <description>&lt;p&gt;At some point, I’ll get back to actually posting substantive things.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://bokken.re/index.html&quot;&gt;bokken&lt;/a&gt;: Open Source Reverse Code Engineering. Looks pretty
cool.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mindtheproduct.com/2015/07/video-tom-chi-on-rapid-prototyping-product-management/&quot;&gt;Tony Chi talk at Mind the Product 2015&lt;/a&gt;. This is awesome, watch it. Rapid prototyping, real-world
feedback over conjecture, keep loop length really short, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/adv-book/&quot;&gt;The Advanced Rust Programming Language&lt;/a&gt;. A sequel
of sorts to &lt;a href=&quot;https://doc.rust-lang.org/book/&quot;&gt;The Rust Programming Language&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.rklesolutions.com/blog/supply-chain-evolution/&quot;&gt;Supply Chain Evolution - Lessons from Ford and Toyota&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.oreilly.com/programming/free/files/software-paradox.pdf&quot;&gt;The Software Paradox: The Rise and Fall of the Commercial Software Market&lt;/a&gt;. Interesting
and somewhat flawed exploration of software markets.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cbucher/console&quot;&gt;ConsoleZ&lt;/a&gt;. Updated version of Console2 that is being
actively developed (better console on Windows).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.koreanfluent.com/cross_cultural/korean_keyboard/korean_keyboard.htm&quot;&gt;How to Type Korean on a Computer (in Windows 8, 7 or Vista)&lt;/a&gt;.
It’s hard to test that your software handles locales properly unless you can generate
a few test cases.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Korean_language_and_computers&quot;&gt;Korean language and computers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://nickdesaulniers.github.io/blog/2015/07/23/additional-c-slash-c-plus-plus-tooling/&quot;&gt;Additional C/C++ Tooling&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://utf8everywhere.org/&quot;&gt;UTF-8 Everywhere&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 31 Jul 2015 09:18:00 -0700</pubDate>
        <link>http://neurocline.github.io/programming/2015/07/31/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/programming/2015/07/31/recent-links.html</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Software Architecture books</title>
        <description>&lt;p&gt;I have a lot of them, and most are not great. There are still more books I need
to read, and then I’ll either write The Great Software Architecture Book or I’ll
point you to an existing one.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Software-Systems-Architecture-Stakeholders-Perspectives/dp/032171833X&quot;&gt;Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives (2nd Edition)&lt;/a&gt; - Nick Rozanski, Eoin Woods, 2011.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Lean-Architecture-Agile-Software-Development/dp/0470684208&quot;&gt;Lean Architecture: for Agile Software Development&lt;/a&gt; - James Coplien, 2010.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Software-Architecture-Practice-Edition-Engineering/dp/0321815734&quot;&gt;Software Architecture in Practice (3rd Edition) (SEI Series in Software Engineering)&lt;/a&gt; - Len Bass, Paul Clements, Rick Kazman, 2012.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Documenting-Software-Architectures-Beyond-Edition/dp/0321552687&quot;&gt;Documenting Software Architectures: Views and Beyond (2nd Edition)&lt;/a&gt; - Paul Clements, Felix Bachmann, Len Bass, etc, 2010.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Evaluating-Software-Architectures-Methods-Studies/dp/020170482X&quot;&gt;Evaluating Software Architectures: Methods and Case Studies&lt;/a&gt; - Paul Clements, Rick Kazman, Mark Klein, 2001.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Just-Enough-Software-Architecture-Risk-Driven/dp/0984618104&quot;&gt;Just Enough Software Architecture: A Risk-Driven Approach&lt;/a&gt; - George Fairbanks, 2010.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Software-Architecture-Foundations-Theory-Practice/dp/0470167742&quot;&gt;Software Architecture: Foundations, Theory, and Practice&lt;/a&gt; - R. N. Taylor, N. Medvidovic, E. M. Dashofy, 2009.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Service-Design-Patterns-Fundamental-Solutions/dp/032154420X&quot;&gt;Service Design Patterns: Fundamental Design Solutions for SOAP/WSDL and RESTful Web Services&lt;/a&gt; - Robert Daigneau, 2011.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Software-Architecture-Perspectives-Emerging-Discipline/dp/0131829572&quot;&gt;Software Architecture: Perspectives on an Emerging Discipline&lt;/a&gt; - Mary Shaw, David Garlan, 1996.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Architecture-Centric-Software-Project-Management-Practical/dp/0201734095&quot;&gt;Architecture-Centric Software Project Management: A Practical Guide&lt;/a&gt; - Daniel J. Paulish, 2002.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.oreilly.com/programming/free/files/software-architecture-patterns.pdf&quot;&gt;Software Architecture Patterns&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/dp/0131412752/&quot;&gt;A Practical Guide to Enterprise Architecture&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Pattern-Oriented-Software-Architecture-Volume-Patterns/dp/0471958697&quot;&gt;Pattern-Oriented Software Architecture Volume 1: A System of Patterns&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Pattern-Oriented-Software-Architecture-Volume-Concurrent/dp/0471606952&quot;&gt;Pattern-Oriented Software Architecture Volume 2: Patterns for Concurrent and Networked Objects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Pattern-Oriented-Software-Architecture-Volume-Management/dp/0470845252&quot;&gt;Pattern-Oriented Software Architecture Volume 3: Patterns for Resource Management&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Pattern-Oriented-Software-Architecture-Volume-Distributed/dp/0470059028&quot;&gt;Pattern-Oriented Software Architecture Volume 4: A Pattern Language for Distributed Computing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ee658117.aspx&quot;&gt;Microsoft Application Architecture Guide, 2nd Edition, October 2009, Chapter 3: Architectural Patterns and Styles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pubs.opengroup.org/architecture/togaf8-doc/arch/chap28.html&quot;&gt;Architecture Patterns&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Architectural_pattern&quot;&gt;Architectural Pattern&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikibooks.org/wiki/Introduction_to_Software_Engineering/Architecture/Design_Patterns&quot;&gt;Introduction to Software Engineering/Architecture/Design Patterns&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.shejimoshi.com/download/Software%20Architecture%20Design%20Patterns%20in%20Java.pdf&quot;&gt;Software Architecture Design Patterns in Java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm&quot;&gt;Architectural Styles and the Design of Network-based Software Architectures&lt;/a&gt; - Roy Fielding’s REST thesis.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.redbooks.ibm.com/redbooks/pdfs/sg247105.pdf&quot;&gt;Patterns: Model-Driven Development Using IBM Rational Software Architect&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://sophia.javeriana.edu.co/~cbustaca/DSBP/pagina/articulos/Articulo%20No.04.pdf&quot;&gt;Usability Patterns in Software Architecture&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.objectmentor.com/resources/articles/Principles_and_Patterns.pdf&quot;&gt;Design Principles and Design Patterns&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/nakov/architectural-patterns-and-software-architectures-clientserver-multitier-mvc-mvp-mvvm-ioc-di-soa-cloud-computing&quot;&gt;Architectural Patterns: Multi-Tier, MVC, MVP, MVVM, IoC, DI, SOA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.codingoutloud.com/2015/03/18/talk-cloud-architecture-anti-patterns-oreilly-software-architecture-conference/&quot;&gt;Cloud Architecture Anti-Patterns&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://handbookofsoftwarearchitecture.com/&quot;&gt;Handbook of Software Architecture&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Jul 2015 07:20:00 -0700</pubDate>
        <link>http://neurocline.github.io/programming/2015/07/05/software-architecture-books.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/programming/2015/07/05/software-architecture-books.html</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>The Actor model</title>
        <description>&lt;p&gt;The actor model has held out a lot of promise over the past 40 years, but has
never been fully embraced by the software development community (unlike, say,
structured programming or object-oriented programming). There are a few modern
languages that facilitate Actor model programming; Erlang and Scala+Akka are the
two most popular.
ee
In the Actor model, the only means to share state between concurrent and/or
parallel actors is message passing. In most other systems, access to state is
shared and synchronized by primitives like semaphores and mutexes. This does
not mean bliss and the lack of needing synchronization, because state can be
coupled even if it is not directly shared.&lt;/p&gt;

&lt;p&gt;Some random links that I will sort through:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Actor_model&quot;&gt;Actor model&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://practicingruby.com/articles/gentle-intro-to-actor-based-concurrency&quot;&gt;A gentle introduction to actor-based concurrency&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?ActorsModel&quot;&gt;ActorsModel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pchiusano.blogspot.com/2010/01/actors-are-not-good-concurrency-model.html&quot;&gt;Actors are not a good concurrency model&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/drorbr/the-actor-model-towards-better-concurrency&quot;&gt;The Actor Model: Towards Better Concurrency&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://danielwestheide.com/blog/2013/02/27/the-neophytes-guide-to-scala-part-14-the-actor-approach-to-concurrency.html&quot;&gt;The Neophyte’s Guide to Scala Part 14: The Actor Approach to Concurrency&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.infoq.com/news/2014/10/intro-actor-model&quot;&gt;An Introduction to Actor Model, with Examples in Akka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://james-iry.blogspot.com/2009/04/erlang-style-actors-are-all-about.html&quot;&gt;Erlang Style Actors Are All About Shared State&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Perhaps the reason the Actor model has never taken off is because state doesn’t
compose well. This is why we have transactions, as evil as those are. Is there
another answer?&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Jul 2015 07:00:04 -0700</pubDate>
        <link>http://neurocline.github.io/programming/2015/07/05/actor-model.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/programming/2015/07/05/actor-model.html</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://cforster.com/&quot;&gt;Chris Forster (blog)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tei-c.org/index.xml&quot;&gt;Text Encoding Initiative&lt;/a&gt; - insane overkill, but
good as a low-level standard that higher-level tools encode into?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vapourismo/luwra&quot;&gt;Luwra&lt;/a&gt; - header-only C++ Lua wrapper&lt;/p&gt;

&lt;p&gt;Two posts on Deep Learning
* &lt;a href=&quot;https://charlesmartin14.wordpress.com/2015/03/25/why-does-deep-learning-work/&quot;&gt;Why does Deep Learning work?&lt;/a&gt;
* &lt;a href=&quot;https://charlesmartin14.wordpress.com/2015/04/01/why-deep-learning-works-ii-the-renormalization-group/&quot;&gt;Why Deep Learning Works II: the Renormalization Group&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.opensource.apple.com/&quot;&gt;Apple Open Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://turingtester.wordpress.com/2015/07/05/object-theft-etiquette-in-c-methods-with-a-side-of/&quot;&gt;Object Theft Etiquette in C++: methods with a side of &amp;amp;&amp;amp;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ichub.io/p/physics&quot;&gt;Point and spring simulation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@leeb/why-invest-in-tools-3240ce289930&quot;&gt;Why Invest in Tools?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.bell-labs.com/usr/dmr/www/hopl.html&quot;&gt;Five Little Languages and How They Grew: Talk at HOPL&lt;/a&gt; - Dennis M. Ritchie.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.loggly.com/blog/five-invaluable-techniques-to-improve-regex-performance/&quot;&gt;Five Invaluable Techniques to Improve Regex Performance&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ds.cs.ut.ee/courses/course-files/To303nis%20Pool%20.pdf&quot;&gt;Comparison of Erlang Runtime System and Java Virtual Machine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://graydon2.dreamwidth.org/218040.html&quot;&gt;Things Rust Shipped Without&lt;/a&gt; - meant as a positive list of bad things Rust lacks.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jsbreakouts.org/&quot;&gt;Breakouts&lt;/a&gt; - evaluating JavaScript game engines by writing Breakout in each one.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://archive.org/stream/graphicpresentat00brinrich#page/n0/mode/thumb&quot;&gt;Graphic Presentation (1939)&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Jul 2015 03:00:00 -0700</pubDate>
        <link>http://neurocline.github.io/links/2015/07/05/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/links/2015/07/05/recent-links.html</guid>
        
        
        <category>links</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.bloomberg.com/graphics/2015-paul-ford-what-is-code/&quot;&gt;What is Code?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fanout/zurl&quot;&gt;zurl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://nixos.org/&quot;&gt;NixOS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=9705690&quot;&gt;‘git inject’&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lifehacker.com/5991848/how-to-boot-from-a-cd-or-usb-drive-on-any-pc#&quot;&gt;How to Boot From a CD or USB Drive on Any PC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://technet.microsoft.com/en-us/library/dd744347(v=ws.10).aspx&quot;&gt;BCDboot Command-Line Options&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://windows.microsoft.com/en-us/windows/preview-download&quot;&gt;Download Windows 10 Insider Preview&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Jun 2015 16:30:00 -0700</pubDate>
        <link>http://neurocline.github.io/links/2015/06/16/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/links/2015/06/16/recent-links.html</guid>
        
        
        <category>links</category>
        
      </item>
    
      <item>
        <title>Windows boot from VHD</title>
        <description>&lt;p&gt;I’m going to try a workflow that involves running from a system contained in a VHD
file rather than directly installed to a hard disk. This isn’t just to try out new
versions like Windows 10, but as a normal practice. Here are a few of the things
driving me to try this.&lt;/p&gt;

&lt;p&gt;The main one is the idea of having a clean system at all times. Maintaining a clean system is
hard, because you install stuff in order to get work done, and then in a few months you have a
mess. My hope is that with a VHD-based system, I can set aside milestone VHDs that I can revert
to when I want a clean system again. That’s the main workflow I’ll be exploring: install clean
OS, install my tools, make snapshot, work for a while, then want to alter the base version, so
revert to it, install new tools, make a snapshot, etc. Hard disks are now fast enough that making
a snapshot is a matter of seconds to minutes, based on how big you keep your operating system
partition.&lt;/p&gt;

&lt;p&gt;Another is being able to switch between versions of the operating system. I may prefer a specific
version of Windows as a user, but there are a lot of users out there with different preferences,
and I need to make sure my software works on their Windows version as well. Or I may want to write
software for a bleeding edge version that I don’t want to live in day-by-day yet.&lt;/p&gt;

&lt;p&gt;And then finally, if I’m semi-frequently wiping my operating system partition, I’ll have to learn
to keep my user data off the operating system partition. I already work this way - I don’t put my
own stuff into my User folder, but separate folders like “projects”.&lt;/p&gt;

&lt;p&gt;This is not a set of instructions at the moment, it’s a record of actions.&lt;/p&gt;

&lt;h2 id=&quot;grab-windows-10-technical-preview&quot;&gt;Grab Windows 10 Technical Preview&lt;/h2&gt;

&lt;p&gt;Grab it from here - for now, this is going to be final soon.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://windows.microsoft.com/en-us/windows/preview-download&quot;&gt;Download Windows 10 Insider Preview&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-a-vhd&quot;&gt;Create a VHD&lt;/h2&gt;

&lt;h3 id=&quot;using-disk-management-console&quot;&gt;Using Disk Management console&lt;/h3&gt;

&lt;p&gt;run &lt;code&gt;mmc diskmgmt.msc&lt;/code&gt; from the command-line or launch Computer Management from Administrative tools or directly via Manage Computer. Or use DiskPart.&lt;/p&gt;

&lt;p&gt;Action: Create VHD. Dynamically expanding VHDs have a slight performance overhead and aren’t appropriate
in certain scenarios (like, for example, booting from it).&lt;/p&gt;

&lt;p&gt;This will create an uninitialized disk, so initialize it, either as MBR or GPT. Either is a fine choice
for modern systems. I do GPT.&lt;/p&gt;

&lt;h2 id=&quot;mbr-versus-gpt&quot;&gt;MBR versus GPT&lt;/h2&gt;

&lt;p&gt;Use MBR if you’re going to boot from this on a non-UEFI system,
or if it’s a small disk, otherwise use GPT. In reality, use MBR for “small” disks (say under 500 GB) and
use GPT for larger ones. GPT is slightly more wasteful since it always includes a Protective MBR so that
older operating systems don’t think the drive is uninitialized, and this consumes between 30 to 100 MB,
at least on drives formatted on Windows 7 (bigger if it has an MSR).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A 2 GB VHD partitioned as GPT and initialized with one volume gives a capacity of 2,111,827,968 bytes.&lt;/li&gt;
  &lt;li&gt;A 2 GB VHD partitioned as MBR and initialized with one volume gives a capacity of 2,144,333,824 bytes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You may or may not consider this substantial. GPT drives should be slightly more resilient than MBR
drives, and as an added bonus, volume labels are 72 bytes (36 UTF-16LE characters) in GPT (MBR
volumes don’t actually have names, but FAT-formatted volumes have a 11-byte limit and NTFS-fofmatted
volumes have a 32-character limit). So in reality, it’s irrelevant, because we almost always use
NTFS, right?&lt;/p&gt;

&lt;h2 id=&quot;mount-a-vhd&quot;&gt;Mount a VHD&lt;/h2&gt;

&lt;p&gt;run &lt;code&gt;mmc diskmgmt.msc&lt;/code&gt; from the command-line or launch Computer Management from Administrative tools or directly via Manage Computer.&lt;/p&gt;

&lt;p&gt;Action: Attach VHD. Select the mosunt point, which is typically going to be a drive letter.&lt;/p&gt;

&lt;h2 id=&quot;unmount-a-vhd&quot;&gt;Unmount a VHD&lt;/h2&gt;

&lt;p&gt;Detach VHD in Disk Management (right-click on a Disk to see this menu item).&lt;/p&gt;

&lt;h2 id=&quot;using-diskpart&quot;&gt;Using DiskPart&lt;/h2&gt;

&lt;p&gt;DiskPart can do many disk-related tasks, and more importantly, can be driven with scripts. For
example, create this script&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;create vdisk &lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;C:&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;HD&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;in10.vhd &lt;span class=&quot;nv&quot;&gt;maximum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;51200&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;fixed
&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; vdisk &lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;C:&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;HD&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;in10.vhd
attach vdisk
create partition primary
assign &lt;span class=&quot;nv&quot;&gt;letter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;v
format quick &lt;span class=&quot;nv&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;vhd
detach vdisk
&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and run it&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; diskpart /s makevhd.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will create a 50 GB VHD file, and then create a single primary partition on it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://technet.microsoft.com/en-us/library/dn614984.aspx&quot;&gt;Diskpart Scripts and Examples&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;hyper-v-and-windows-8&quot;&gt;Hyper-V and Windows 8&lt;/h2&gt;

&lt;p&gt;One reason to upgrade to Windows 8.1 is to get Client Hyper-V&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.infoworld.com/article/2616033/virtualization/5-excellent-uses-of-windows-8-hyper-v.html&quot;&gt;5 excellent uses of Windows 8 Hyper-V&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;burn-iso-to-usb-drive&quot;&gt;Burn ISO to USB drive&lt;/h2&gt;

&lt;p&gt;Well, not really burn. Windows doesn’t have native ISO tools, which is really annoying (especially
since ISO is a pretty simple format). Enter Rufus.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://rufus.akeo.ie/&quot;&gt;Rufus&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pcsupport.about.com/od/file-folder/fl/burn-iso-usb.htm&quot;&gt;How To Burn an ISO File to a USB Drive&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.wintellect.com/devcenter/paulballard/dual-boot-windows-10-technical-preview-from-a-vhd&quot;&gt;Dual Boot Windows 10 Technical Preview From A VHD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://newsignature.com/articles/windows-10-technical-preview-using-vhd-native-boot&quot;&gt;Windows 10 Technical Preview Using VHD Native Boot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.neowin.net/news/guide-how-to-install-windows-10-using-vhds&quot;&gt;Guide: How to install Windows 10 using VHDs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blogs.technet.com/b/haroldwong/archive/2012/08/18/how-to-create-windows-8-vhd-for-boot-to-vhd-using-simple-easy-to-follow-steps.aspx&quot;&gt;How to Create Windows 8 VHD for Boot to VHD using simple, easy to follow steps&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/hardware/dn640535(v=vs.85).aspx&quot;&gt;Windows and GPT FAQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.techotopia.com/index.php/Creating_and_Managing_MBR_Disk_Partitions_on_Windows_Server_2008_Basic_Disks&quot;&gt;Creating and Managing MBR Disk Partitions on Windows Server 2008 Basic Disks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/dd163549.aspx&quot;&gt;Using Basic Disks and Partitions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GUID_Partition_Table&quot;&gt;GUID Partition Table&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/hardware/dn640535(v=vs.85).aspx&quot;&gt;Windows and GPT FAQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.techrepublic.com/blog/windows-and-office/dual-boot-windows-7-and-windows-8-using-a-vhd/&quot;&gt;Dual-boot Windows 7 and Windows 8 using a VHD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 13 Jun 2015 03:20:00 -0700</pubDate>
        <link>http://neurocline.github.io/windows/2015/06/13/windows-boot-from-vhd.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/windows/2015/06/13/windows-boot-from-vhd.html</guid>
        
        
        <category>windows</category>
        
      </item>
    
      <item>
        <title>Cryptography links</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.cryptol.net/index.html&quot;&gt;Cryptol: The Language of Cryptography&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/tqbf/be58d2d39690c3b366ad&quot;&gt;(Updated) Cryptographic Right Answers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;the old version from 2009: &lt;a href=&quot;http://www.daemonology.net/blog/2009-06-11-cryptographic-right-answers.html&quot;&gt;Cryptographic Right Answers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and see &lt;a href=&quot;http://www.reddit.com/r/programming/comments/370l3p/cryptographic_right_answers_from_thomas_ptacek/&quot;&gt;reddit thread&lt;/a&gt; and &lt;a href=&quot;https://news.ycombinator.com/item?id=9593916&quot;&gt;Hacker News thread&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 24 May 2015 17:17:00 -0700</pubDate>
        <link>http://neurocline.github.io/cryptography/2015/05/24/Cryptography-Links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/cryptography/2015/05/24/Cryptography-Links.html</guid>
        
        
        <category>cryptography</category>
        
      </item>
    
      <item>
        <title>Tracing System calls</title>
        <description>&lt;h2 id=&quot;linux&quot;&gt;Linux&lt;/h2&gt;

&lt;p&gt;Tracing system calls on Linux is straightforward. The &lt;code&gt;ptrace&lt;/code&gt; API lets
one process trace all system calls made by another process, and the
command-line program &lt;code&gt;strace&lt;/code&gt; uses &lt;code&gt;ptrace&lt;/code&gt; to allow a user to do the
same.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://linux.die.net/man/1/strace&quot;&gt;strace(1)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://linux.die.net/man/2/ptrace&quot;&gt;ptrace(2)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.nelhage.com/2010/08/write-yourself-an-strace-in-70-lines-of-code/&quot;&gt;Write Yourself an Strace in 70 Lines of Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mac-os-x&quot;&gt;Mac OS X&lt;/h2&gt;

&lt;p&gt;Tracing system calls on Mac OS X is a little harder, but more powerful.
The &lt;code&gt;dtrace&lt;/code&gt; system ships with Macs starting with Mac OS X 10.5. Unlike
strace, however, support for dtrace has to be built in to programs. Mac
OS X ships with several thousand probes (the attachment points), and most
normal monitoring is covered. Brendan Gregg’s blog has a Mac OS X-specific
dtrace page, as an example, and there are other useful tutorials&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://dtrace.org/blogs/brendan/2011/10/10/top-10-dtrace-scripts-for-mac-os-x/&quot;&gt;Top 10 DTrace scripts for Mac OS X&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.bignerdranch.com/blog/hooked-on-dtrace-part-1/&quot;&gt;Hooked on DTrace, part 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apple added ptrace to Mac OS X, maybe. There’s a man page for it, but no
strace program for user-level use. I’ll have to try writing some code.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man2/ptrace.2.html&quot;&gt;ptrace(2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are ways to hook/override program and system functions at runtime.
These work but aren’t truly supported, so are of most use for debugging
situations.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rentzsch/mach_override&quot;&gt;mach_override&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rentzsch/mach_override&quot;&gt;mach_inject&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Amit Singh went the kernel extension approach to get access to system calls&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://osxbook.com/book/bonus/ancient/syscall/&quot;&gt;Re-routing System Calls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While there are definitely nefarious uses for this stuff, it can be used for
developers too. For example, this paper talks about rootkits, but the techniques
also make for great developer tools.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.trailofbits.com/resources/advanced_macosx_rootkits_paper.pdf&quot;&gt;Advance Mac OS X Rootkits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bsd&quot;&gt;BSD&lt;/h2&gt;

&lt;p&gt;The equivalent to ptrace on BSD is ktrace. Unfortunately, ktrace is not
available on Mac OS X. That’s annoying, because it is complementary to
DTrace, which is an awesome sysop-level tool, but does not give complete
access to all system calls. Mac OS X had ktrace in 10.4 and earlier.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=ktrace(1)&amp;amp;sektion=&quot;&gt;ktrace(1)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=ktrace&amp;amp;sektion=2&quot;&gt;ktrace(2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;windows&quot;&gt;Windows&lt;/h2&gt;

&lt;p&gt;There is the amazing Process Monitor, which traces all file and registry
actions. However, this is strictly a user-level program, you work with it through
its GUI. It’s very useful, but does not give you system-call level access from
your own source code.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://kohei.us/2010/06/25/strace-equivalent-for-windows/&quot;&gt;STRACE EQUIVALENT FOR WINDOWS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a fairly new project called StraceNT. It comes with source code.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://intellectualheaven.com/default.asp?BH=STraceNT&quot;&gt;StraceNT - A System Call Tracer for Windows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/intellectualheaven/stracent&quot;&gt;github/intellectualheaven/stracent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dr. Memory comes with “strace for Windows” called drstrace.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DynamoRIO/drmemory&quot;&gt;github/DynamoRIO/drmemory&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.drmemory.org/strace_for_windows.html&quot;&gt;System Call Tracer (“strace”) for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Event Tracing for Windows (ETW) is the Microsoft official technique, and has
several programs layered on top.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/magazine/ee412263.aspx&quot;&gt;Core OS Events in Windows 7, Part 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is Logger and LogView, also Microsoft tools&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/hardware/ff552060(v=vs.85).aspx&quot;&gt;Logger and LogViewer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is NtTrace&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.howzatt.demon.co.uk/NtTrace/&quot;&gt;NtTrace - Native API tracing for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An article&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jbremer.org/intercepting-system-calls-on-x86_64-windows/&quot;&gt;Intercepting System Calls on x86_64 Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fabricate&quot;&gt;fabricate&lt;/h2&gt;

&lt;p&gt;This is a python build tool that watches for files that have changed as a result
of running a command. It uses strace on Linux but does filetime watching on
Windows, so maybe look for how to get Python on Windows to use one of the other
file monitoring solutions?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.google.com/p/fabricate/&quot;&gt;fabricate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.google.com/p/fabricate/issues/detail?id=3&quot;&gt;fabricate issue 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tup&quot;&gt;tup&lt;/h2&gt;

&lt;p&gt;The tup build tool uses DLL injection on Windows to detect file I/O.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://gittup.org/tup/&quot;&gt;tup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ninja&quot;&gt;ninja&lt;/h2&gt;

&lt;p&gt;The ninja tool also does filesystem watching, I think.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://martine.github.io/ninja/&quot;&gt;Ninja&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;google-building-in-the-cloud&quot;&gt;Google “building in the cloud”&lt;/h2&gt;

&lt;p&gt;This is a FUSE-based approach, so not exactly tracing system calls.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://google-engtools.blogspot.com/2011/06/build-in-cloud-accessing-source-code.html&quot;&gt;Build in the Cloud: Accessing Source Code&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 24 May 2015 16:24:00 -0700</pubDate>
        <link>http://neurocline.github.io/blog/2015/05/24/Tracing-System-Calls.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/blog/2015/05/24/Tracing-System-Calls.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>

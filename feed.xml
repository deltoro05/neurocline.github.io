<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Some Things Are Obvious</title>
    <description>Answers to some of the world&#39;s questions
</description>
    <link>http://neurocline.github.io/</link>
    <atom:link href="http://neurocline.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 29 Nov 2016 18:51:13 -0800</pubDate>
    <lastBuildDate>Tue, 29 Nov 2016 18:51:13 -0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Using Matplotlib</title>
        <description>&lt;p&gt;Matplotlib is worth using, but it’s very finicky, and the defaults are aimed at
a class of user that doesn’t include me.&lt;/p&gt;

&lt;h2 id=&quot;matlab-style-with-pyplot&quot;&gt;MATLAB style with pyplot&lt;/h2&gt;

&lt;p&gt;I started with the simple declarative style via &lt;code&gt;matplotlib.pyplot&lt;/code&gt;, but that quickly
gets limited. It looks like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Agg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rcParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lines.linewidth&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rcParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lines.color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rcParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;figure.figsize&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Orgs by create date&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year_fraction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ticklabel_format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;useOffset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savefig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bbox_inches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;tight&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For example, without the &lt;code&gt;useOffset=False&lt;/code&gt; bit, my X axis was numbered 0-5 with
an offset written above it, rathern than 2012-2017 as I intended. I suppose this is
useful for scientific plots. I spent 30 minutes combing through documentation trying
to figure this out before resorting to StackOverflow. Similarly, I had to use other
StackOverflow entries to tell me how to write the graph as a file and not to show
it in an interactive window. Again, I’m not the target audience.&lt;/p&gt;

&lt;h2 id=&quot;object-oriented-matplotlib&quot;&gt;object-oriented Matplotlib&lt;/h2&gt;

&lt;p&gt;This is the right way for me, I think. Note that the code example above had to dip
into the object layer anyway, in order to configure the X axis.&lt;/p&gt;

&lt;h2 id=&quot;xkcd-style&quot;&gt;xkcd style&lt;/h2&gt;

&lt;p&gt;One cool thing is that someone made an xkcd style for Matplotlib. Just wrap your
code in this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xkcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# your code here&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and your graphics will have that hand-drawn xkcd style applied to them.&lt;/p&gt;

&lt;p&gt;Here is the example from the Matplotlib docs&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xkcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Based on &amp;quot;Stove Ownership&amp;quot; from XKCD by Randall Monroe&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# http://xkcd.com/418/&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;top&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;THE DAY I REALIZED&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;I COULD COOK BACON&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;WHENEVER I WANTED&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;xy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arrowprops&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arrowstyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;-&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xytext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;my overall health&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;quot;Stove Ownership&amp;quot; from xkcd by Randall Monroe&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Based on &amp;quot;The Data So Far&amp;quot; from XKCD by Randall Monroe&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# http://xkcd.com/373/&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;top&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xaxis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ticks_position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;110&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xticklabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;CONFIRMED BY&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;EXPERIMENT&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;REFUTED BY&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;EXPERIMENT&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;CLAIMS OF SUPERNATURAL POWERS&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;quot;The Data So Far&amp;quot; from xkcd by Randall Monroe&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;ggplot&quot;&gt;ggplot&lt;/h2&gt;

&lt;p&gt;I wish Matplotlib learned more lessons from Leland Wilkinson’s Grammar of Graphics.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://seaborn.pydata.org/index.html#&quot;&gt;Seaborn&lt;/a&gt; is an interesting start.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9303728/matplotlib-yaxis-range-display-using-absolute-values-rather-than-offset-values&quot;&gt;Matplotlib yaxis range display using absolute values rather than offset values?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/3677368/matplotlib-format-axis-offset-values-to-whole-numbers-or-specific-number&quot;&gt;matplotlib: format axis offset-values to whole numbers or specific number&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dansaber.wordpress.com/2016/10/02/a-dramatic-tour-through-pythons-data-visualization-landscape-including-ggplot-and-altair/&quot;&gt;A Dramatic Tour through Python’s Data Visualization Landscape (including ggplot and Altair)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.yhat.com/posts/ggplot-for-python.html&quot;&gt;ggplot for python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jakevdp.github.io/blog/2013/03/23/matplotlib-and-the-future-of-visualization-in-python/&quot;&gt;Matplotlib and the Future of Visualization in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Exploratory-Data-Analysis-John-Tukey/dp/0201076160&quot;&gt;Exploratory Data Analysis&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Semiology-Graphics-Diagrams-Networks-Maps/dp/1589482611&quot;&gt;Semiology of Graphics: Diagrams, Networks, Maps&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Nov 2016 13:11:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/11/29/using-matplotlib.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/11/29/using-matplotlib.html</guid>
        
        <category>python</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://mpld3.github.io/&quot;&gt;mpld3: Bringing Matplotlib to the Browser&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://bokeh.pydata.org/en/latest/&quot;&gt;Bokeh&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://vispy.org/&quot;&gt;VisPy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.scipy.org/&quot;&gt;SciPy.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://matplotlib.org/&quot;&gt;Matplotlib&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.scipy-lectures.org/intro/matplotlib/matplotlib.html&quot;&gt;1.4. Matplotlib: plotting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://rouge.jneen.net/&quot;&gt;{Rouge}&lt;/a&gt; with lots of &lt;a href=&quot;https://github.com/jneen/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;supported languages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt; with lots of &lt;a href=&quot;http://pygments.org/docs/lexers/&quot;&gt;supported languages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9622163/save-plot-to-image-file-instead-of-displaying-it-using-matplotlib-so-it-can-be&quot;&gt;Save plot to image file instead of displaying it using Matplotlib&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://matplotlib.org/faq/howto_faq.html#generate-images-without-having-a-window-appear&quot;&gt;http://matplotlib.org/faq/howto_faq.html#generate-images-without-having-a-window-appear&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers&quot;&gt;https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Nov 2016 17:53:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/11/28/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/11/28/recent-links.html</guid>
        
        <category>text</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Python virtualenv</title>
        <description>&lt;p&gt;Lately I use virtualenv reflexively, because big packages have lots of dependencies. It’s
mildly annoying, I wish version conflicts didn’t happen, but that’s life. This happens 
at the OS level, but it’s epochal - the transition from DOS to Windows, say, or from
Mac OS 9 to Mac OS X.&lt;/p&gt;

&lt;p&gt;That said, there is an advantage to using virtualenv, and that is that it makes it
a little easier to use multiple major versions of Python on the same machine, because
activating a virtualenv environment fiddles with paths.&lt;/p&gt;

&lt;p&gt;I have two main reasons for using virtualenv. First, I actually do have conflicts from
time to time with package versions, and I also do need to run both Python 2 and Python 3
(sigh). But the second reason is equally nice - I can install something to try it out, and
if it fails, I just trash a virtualenv directory. This is also why people use Docker, and
why things like Vagrant or Puppet also started seeing widespread use; it’s easy to screw
things up when everything is installed globally, so until operating systems get fixed, use
systems like this to pretend to have a global system, or to hide the pain of constantly
re-installing. For Python, we have &lt;code&gt;pip freeze&lt;/code&gt; and &lt;code&gt;pip install -r&lt;/code&gt; to somewhat automate
that, and Ruby has Bundler.&lt;/p&gt;

&lt;h1 id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;The basic operations are these&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a virtualenv environment based on a physical Python install; this is essentially a
new custom Python install.&lt;/li&gt;
  &lt;li&gt;Activate a specific virtualenv environment&lt;/li&gt;
  &lt;li&gt;Deactivate the current virtualenv environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don’t think this is a stack, but it might be (I’ve never experimented).&lt;/p&gt;

&lt;p&gt;That’s it. Best practice would probably be to put all these virtualenv directories
in one place, maybe alongside the physical Python installs, because the virtualenv
folders point back to your physical installs; you can’t just copy these to a new system.&lt;/p&gt;

&lt;p&gt;They are fairly small, on the order of 20 MB, so not too painful to have lots of them, and
they only take a few seconds to create.&lt;/p&gt;

&lt;h1 id=&quot;windows&quot;&gt;Windows&lt;/h1&gt;

&lt;p&gt;Using virtualenv on Windows is a little different than on Unix (Linux/Mac). Creating is
pretty much the same, but activating is a little different.&lt;/p&gt;

&lt;p&gt;Note: My command prompts are using the &lt;code&gt;$&lt;/code&gt; character because the syntax highlighter I’m
using doesn’t work for DOS/Powershell style consoles. I’ll fix that at some point. I also
transcribed &lt;code&gt;\\&lt;/code&gt; to &lt;code&gt;/&lt;/code&gt; for the same reason. Microsoft really needs to abandon &lt;code&gt;\\&lt;/code&gt; as 
the path separator char.&lt;/p&gt;

&lt;p&gt;For the following, I have two versions of Python installed in these global directories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;C:/Python27&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;C:/Python35&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;create-new-virtualenv-environment&quot;&gt;Create new virtualenv environment&lt;/h2&gt;

&lt;p&gt;The simple version is this - create a new virtual environment into the directory &lt;code&gt;matplotlib&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; virtualenv matplotlib
&lt;span class=&quot;go&quot;&gt;Using base prefix &amp;#39;C:/python35&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;New python executable in C:/w/matplotlib/Scripts/python.exe&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing setuptools, pip, wheel...done.&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you want, you can specify a specific version. For running Jekyll, I need Python 2.7
(because I’m using Pygments).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; virtualenv -p C:/Python27/python.exe py-jekyll
&lt;span class=&quot;go&quot;&gt;Using base prefix &amp;#39;c:/python35&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;New python executable in C:/w/py-jekyll/Scripts/python.exe&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing setuptools, pip, wheel...done.&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By default, the packages you already had installed in your base Python version are not carried
over into your new version. This is a good thing, but it means you’ll have to install packages.&lt;/p&gt;

&lt;h2 id=&quot;activate-environment&quot;&gt;Activate environment&lt;/h2&gt;

&lt;p&gt;From whatever command prompt you’re going to issue further Python commands from:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;matplotlib
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; Scripts/activate
&lt;span class=&quot;go&quot;&gt;(matplotlib) $&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that the prompt changes to remind you which virtual environment you have active.&lt;/p&gt;

&lt;p&gt;If you’re going to install packages, make sure you do this first. All this does is fiddle with
the environment variables to put your &lt;code&gt;virtualenv&lt;/code&gt; Python version first.&lt;/p&gt;

&lt;h2 id=&quot;deactivate-environment&quot;&gt;Deactivate environment&lt;/h2&gt;

&lt;p&gt;Since this is Windows, you could just close the command window. Or you can deactivate the
environment to get back to whatever you had set globally:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;(matplotlib) $ deactivate&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 28 Nov 2016 12:11:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/11/28/python-virtualenv.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/11/28/python-virtualenv.html</guid>
        
        <category>python</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>History: told by the winners or the losers?</title>
        <description>&lt;p&gt;There is a saying: “history is told by the winners”. It seems intuitively true, and that
is usually a warning sign that we’re not thinking things through.&lt;/p&gt;

&lt;p&gt;Recently a new thesis has been advanced: history is told by the losers. For an example of
the argument:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://scholars-stage.blogspot.com/2016/11/history-is-written-by-losers.html&quot;&gt;History is Written by the Losers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This makes a compelling case - when you have an erudite person who is the winner, they
don’t have time to write anything, but when that person is shoved aside, that person
may just write a history that’s more palatable to them. The two cases cited cover the
origins of history-from-historians.&lt;/p&gt;

&lt;p&gt;Here’s how I look at it. There are two ways that history is written. The first is that history
is written by consensus; over time, we mostly converge to the same view. This maps to the “history
is written by the winners” side of things, because of course the winners have an outsized
influence on what is said.&lt;/p&gt;

&lt;p&gt;But the other way that history is written is the auteur approach - a single person or small
group that selects what it thinks should be recorded. In the case of Siam Qian or Herodotus
or Thucydides, the stories are powerful enough to survive when the consensus history did not.
And over the very long stretch of time, when we have wars or other catastrophes that upset
and destroy specific civilizations, the consensus form of history doesn’t survive.&lt;/p&gt;

&lt;p&gt;It’s an interesting thought. I’m still not sure that history is only or even largely written
by losers, but maybe with enough research we’ll determine this is true.&lt;/p&gt;

&lt;p&gt;Or maybe this view will be the one that survives because some loser will write it down and
promote it.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;Another bit on history written by losers:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://history.stackexchange.com/questions/5597/is-history-always-written-by-the-victors&quot;&gt;Is history always written by the victors?&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 27 Nov 2016 04:52:00 -0800</pubDate>
        <link>http://neurocline.github.io/philosophy/2016/11/27/history-told-by-winners-or-losers.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/philosophy/2016/11/27/history-told-by-winners-or-losers.html</guid>
        
        <category>history</category>
        
        
        <category>philosophy</category>
        
      </item>
    
      <item>
        <title>Git: The Theoretical Minimum</title>
        <description>&lt;p&gt;I intend to write a book titled “Git: The Theoretical Minimum”, inspired by Leonard Susskind’s
two books &lt;a href=&quot;https://www.amazon.com/Theoretical-Minimum-Start-Doing-Physics/dp/0465075681&quot;&gt;The Theoretical Minimum: What You Need to Know to Start Doing Physics&lt;/a&gt;
and &lt;a href=&quot;https://www.amazon.com/Quantum-Mechanics-Theoretical-Leonard-Susskind/dp/0465062903&quot;&gt;Quantum Mechanics: The Theoretical Minimum&lt;/a&gt;
(also see his web site &lt;a href=&quot;http://theoreticalminimum.com/&quot;&gt;The Theoretical Minimum&lt;/a&gt;). These
are awesome books and I recommend them to anyone, because physics is all around us and
having a working knowledge of it is a good thing.&lt;/p&gt;

&lt;p&gt;My reasoning in a nutshell is this: Git is the first real version control system, or rather
it is probably the ancestor of the first real one. And while it is not as complicated to use
as detractors like to say, it’s also not been explained in a succinct fashion. There are now
many thousands of pages written, and yet a lot of Git is not explained except in answers
to StackOverflow questions or by looking at the source.&lt;/p&gt;

&lt;p&gt;I think this means that there is a need for a short volume that explains everything you need
in order to do anything with Git, and I also think that this overlaps with “everything about
version control” to a staggering degree. I don’t mean to have the encyclopedic volume that
literally writes down everything, but rather the bare minimum you need in order to do anything
you need to on your own. For example, the Git help is pretty good, but it’s also only good if
you already understand things - it’s more a reminder reference than something you consult in
order to learn what to do.&lt;/p&gt;

&lt;p&gt;For example, it is probably not important to describe the Git plumbing model, but it is
important to describe exactly how commits work, because that’s at the heart of many Git
operations. What I hope to do is to find the basic set of things you need to know about
any useful version control system, and describe them; the fact that it will be Git-centric
is because Git is the most popular example of a good version control system at the moment.&lt;/p&gt;

&lt;p&gt;Separately, I want to finish the survey of all version control systems, so that we can put
most of them to bed as past history. “I have not come here to praise Perforce but to bury it”.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.rath.org/mercurial-for-git-users-and-vice-versa.html&quot;&gt;Mercurial for Git Users (and vice versa)&lt;/a&gt; - a more modern (early 2016) comparison between
Mercurial and Git.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://softwareengineering.stackexchange.com/questions/940/what-are-your-favorite-version-control-systems&quot;&gt;What are your favorite version control systems?&lt;/a&gt; - I remember using both PVCS and Projector.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_version_control_software&quot;&gt;Comparison of version control software&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.improgrammer.net/top-version-control-systems/&quot;&gt;Top Version Control Systems&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://rhodecode.com/insights/version-control-systems-2016&quot;&gt;Version Control Systems Popularity in 2016&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://webinerds.com/version-control-systems-keep-your-code-in-order/&quot;&gt;Version Control Systems: Keep Your Code In Order!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.catb.org/esr/writings/version-control/version-control.html&quot;&gt;Understanding Version-Control Systems (DRAFT)&lt;/a&gt; - written in 2008, and may be the first attempt to cover the general theory of revision control.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Version_control&quot;&gt;Version control&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ericsink.com/scm/source_control.html&quot;&gt;Source Control HOWTO&lt;/a&gt; - from Eric Sink, useful for common terminology.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ericsink.com/vcbe/html/index.html&quot;&gt;Version Control by Example&lt;/a&gt; - a 2011 online book by Eric Sink.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://betterexplained.com/articles/a-visual-guide-to-version-control/&quot;&gt;A Visual Guide to Version Control&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://betterexplained.com/articles/intro-to-distributed-version-control-illustrated/&quot;&gt;Intro to Distributed Version Control (Illustrated)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cs.ru.nl/~wouters/Publications/PrincipledVersionControl.pdf&quot;&gt;A Principled Approach to Version Control&lt;/a&gt; - a 2006 paper: “This paper aims to give a precise, mathematical description of the version control problem and different version control systems”&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.staff.science.uu.nl/~swier004/publications/2014-onward.pdf&quot;&gt;The Semantics of Version Control&lt;/a&gt;. A 2014 paper by the authors of the previous paper.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pijul.org/&quot;&gt;Pijul&lt;/a&gt;, based on Darcs. Pijul was announced in 2014 but it’s still in (mostly slow moving) development. See &lt;a href=&quot;https://news.ycombinator.com/item?id=10470281&quot;&gt;HackerNews comment thread&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://darcs.net/Theory/Bibliography&quot;&gt;Darcs: Theory/Bibliography&lt;/a&gt;. Darcs is one the few systems that claims to be based on a strong theory; in fact, Darcs devotees are often dismissive of other efforts as not having a formal backdrop. Darcs vs Git is a classic example of “it works in theory”; to two significant digits, no one uses Darcs, everyone uses Git.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://projects.haskell.org/camp/&quot;&gt;Camp (Haskell)&lt;/a&gt;. Another system ideologically related to Darcs. Start in 2009, and seems to have been abandoned as of 2010.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pasky.or.cz/bc/bcthesis-final.pdf&quot;&gt;Current Concepts in Version Control Systems&lt;/a&gt;. 2008 Bachelor thesis by Petr Baudiˇs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cs.cmu.edu/~rwh/papers/htpt/paper.pdf&quot;&gt;Homotopical Patch Theory&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cstheory.stackexchange.com/questions/32374/math-talk-theorem-about-git-revision-control-system&quot;&gt;Math talk: Theorem about git revision control system?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://rahul.gopinath.org/post/2011/12/30/version-control-systems/&quot;&gt;Version Control Systems&lt;/a&gt;. The best historical overview I’ve seen to date.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.278.6065&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;Branching and Merging: An Investigation into Current Version Control Practices&lt;/a&gt;. 2011 paper.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://is.muni.cz/th/98961/fi_b/BcThesis.pdf&quot;&gt;Distributed Source Code Version Control Systems: Comparison and Usage Evaluation&lt;/a&gt;. 2006 Bachelor’s thesis by Michal M¥rka.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://files.codersbase.com/thesis.pdf&quot;&gt;Type-Correct Changes — A Safe Approach to Version Control Implementation&lt;/a&gt;. 2009 Master’s Thesis by Jason Dagit.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hyperpolyglot.org/version-control&quot;&gt;Version Control: Git, Mercurial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.aosabook.org/en/mercurial.html&quot;&gt;TAOSA: Mercurial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://duckrowing.com/2013/12/26/bzr-init-a-bazaar-tutorial/&quot;&gt;BZR INIT: A BAZAAR TUTORIAL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://marklodato.github.io/visual-git-guide/index-en.html&quot;&gt;A Visual Git Reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jhw.dreamwidth.org/1868.html&quot;&gt;WHY I LIKE MERCURIAL MORE THAN GIT&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://schacon.github.io/2008/11/24/on-mercurial.html&quot;&gt;On Mercurial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mercurial-scm.org/wiki/GitConcepts&quot;&gt;Mercurial for Git users&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 25 Nov 2016 13:33:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/11/25/git-the-theoretical-minimum.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/11/25/git-the-theoretical-minimum.html</guid>
        
        <category>git</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://blog.mailgun.com/machine-learning-for-everyday-tasks/&quot;&gt;Machine Learning for Everyday Tasks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cs.cornell.edu/~asampson/blog/statsmistakes.html&quot;&gt;Statistical Mistakes and How to Avoid Them&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://talkpython.fm/episodes/show/86/python-at-stackoverflow&quot;&gt;TalkPython: Episode #86: Python at StackOverflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python&quot;&gt;What is a metaclass in Python?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://subgraph.com/&quot;&gt;Subgraph OS: Adversary resistant computing platform&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://aelkus.github.io/essays/ai_manhattan_project.html&quot;&gt;The Manhattan Project Fallacy&lt;/a&gt; - this is mostly wrong, in my opinion.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://nakedsecurity.sophos.com/2016/08/18/nists-new-password-rules-what-you-need-to-know/&quot;&gt;NIST’s new password rules – what you need to know&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=13021722&quot;&gt;Ask HN: What free or low-cost static site hosting do you use most?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://neocities.org/&quot;&gt;neocities&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://p5js.org/&quot;&gt;p5*js&lt;/a&gt;. A spin-off of Processing, in the Javascript language&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://twinery.org/&quot;&gt;Twine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://hugotunius.se/2016/01/10/the-one-cent-blog.html&quot;&gt;The one cent blog&lt;/a&gt; - about running a blog for $0.01/month (discounting domain registration).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ampproject.org/&quot;&gt;AMP HTML&lt;/a&gt; - a new thing I should use?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.pmease.com/gitplex&quot;&gt;GixPlex&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.theguardian.com/media/2016/nov/22/conservative-websites-media-bubble?CMP=share_btn_fb&quot;&gt;So you want to get out of your bubble: try reading these conservative websites&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Nov 2016 19:45:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/11/24/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/11/24/recent-links.html</guid>
        
        <category>text</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Python makes me cry</title>
        <description>&lt;p&gt;I don’t hate Python. If I hated it, I wouldn’t use it. But every time I start using Python
for serious work, I run into silly problems.&lt;/p&gt;

&lt;p&gt;For example, I used Python 2.x for a long time, but finally switched to Python 3.x because
it was pretty much impossible to correctly handle localized text - you can mostly handle it,
but if you want to be perfect, the edge cases get in your way. But then, once I switched to
Python 3, I remembered that I ran programs that didn’t like Python 2. So then I had to do
shenanigans to get things to run, like mentioned here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://testerstories.com/2014/06/multiple-versions-of-python-on-windows/&quot;&gt;Multiple Versions of Python on Windows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The main issue is that Python emphasizes quick turnaround at the cost of other factors.
For many small problems, this is great. If you’re writing software you just want to use
for weeks, months or years, this is not so great. I find myself constantly fiddling with
things.&lt;/p&gt;

&lt;p&gt;That said, Zeb Shaw went off the deep end when he wrote this.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://learnpythonthehardway.org/book/nopython3.html&quot;&gt;The Case Against Python 3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He may or may not learn the lesson that many others have - you make think you are
“exaggerating for effect’, whereas your opposition will call you a liar, or an idiot,
or other very unkind things. Zeb advances some arguments that are silly, in his attempt
to have a very strong argument.&lt;/p&gt;

&lt;p&gt;Instead, my issue is that I want it all - I want a language where I can quickly run and
test code, and I want to produce programs that just run, on anyone’s machine, or on my
machine years later. I have Mac programs that I wrote in 1988 that still work just fine.
I have Windows programs that I wrote in 1995 that still work just fine. I have lots of
Python, Perl and Ruby code that stop working months after written, because there’s too
much interaction with the machine environment.&lt;/p&gt;

&lt;p&gt;The correct answer is a staticly typed language with a kick-ass package system and
a compiler that’s universally available, where you distribute both binary and source, and
source can be recompiled as needed. Python has parts of this, but the language fights
against stability, and the fact that you need exactly the right VM fights against it.
I can’t just distribute a Python program. But I can distribute just a Windows binary or
a Mac binary.&lt;/p&gt;

&lt;p&gt;Time to get to work.&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Nov 2016 16:45:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/11/23/python-makes-me-cry.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/11/23/python-makes-me-cry.html</guid>
        
        <category>python</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>More on Sphinx</title>
        <description>&lt;p&gt;I’ve been using Sphinx for a few weeks now, and I like it. I’m not sure yet about writing
a blog in it, but it can’t be worse than Jekyll.&lt;/p&gt;

&lt;p&gt;I’m now at the point where I want it to look a certain way, so here’s what I’m reading
about modifying and controlling Sphinx. I’ll get it into shape with conclusions in a bit.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://matplotlib.org/sampledoc/&quot;&gt;matplotlib: sampledoc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docutils.sourceforge.net/docs/ref/rst/directives.html#include&quot;&gt;reStructuredText: Including an External Document Fragment&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://readthedocs.org/&quot;&gt;Read The Docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sphinx-doc.org/en/1.4.8/theming.html&quot;&gt;Sphinx: HTML theming support&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.writethedocs.org/guide/tools/sphinx-themes/&quot;&gt;Write The Docs: Sphinx Themes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/snide/sphinx_rtd_theme&quot;&gt;snide/sphinx_rtd_theme&lt;/a&gt; - the source for the Read The Docs Sphinx theme.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.readthedocs.io/en/latest/theme.html&quot;&gt;Read the Docs Theme&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/14622698/customize-sphinxdoc-theme&quot;&gt;StackOverflow: Customize sphinxdoc theme&lt;/a&gt; - simple example of Sphinx theming.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2075691/some-good-sphinx-customization-examples&quot;&gt;StackOverflow: Some good Sphinx customization examples?&lt;/a&gt; - useful compendium of Sphinx theming links.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/coordt/ADCtheme&quot;&gt;coordt/ADCtheme&lt;/a&gt; - a Sphinx theme that mimics the look of Apple Developer Connection documentation.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pallets/flask-sphinx-themes&quot;&gt;pallets/flask-sphinx-themes&lt;/a&gt; - source for Flask Sphinx Themes&lt;/p&gt;

&lt;p&gt;http://loose-bits.com/2012/11/19/sphinx-bootstrap-theme-updates.html&lt;/p&gt;

&lt;p&gt;http://ryan-roemer.github.io/sphinx-bootstrap-theme/README.html&lt;/p&gt;

&lt;p&gt;http://matplotlib.org/&lt;/p&gt;

&lt;p&gt;http://matplotlib.org/devel/documenting_mpl.html#dynamically-generated-figures&lt;/p&gt;

&lt;p&gt;http://matplotlib.org/devel/documenting_mpl.html#inheritance-diagrams&lt;/p&gt;

&lt;p&gt;https://pypi.python.org/pypi/sphinx-bootstrap-theme/&lt;/p&gt;

&lt;p&gt;https://pythonhosted.org/sphinxjp.themes.basicstrap/options.html&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Nov 2016 15:20:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/11/21/more-on-sphinx.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/11/21/more-on-sphinx.html</guid>
        
        <category>python</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Sphinx for documentation</title>
        <description>&lt;p&gt;Periodically I re-hunt for something better to write with - blogs and books, but
most of all technical documentation. I have been using Markdown and Jekyll for a
blog, and have long since run into limitations: lots of blog articles make the
Jekyll generator take a long time, Liquid markup sucks, Markdown itself is too
limited for what I want.&lt;/p&gt;

&lt;p&gt;OK, on the long time bit. I have about 100 articles in my _posts folder. It
takes Jekyll about 10 seconds to run now, and if I preview with &lt;code&gt;jekyll serve&lt;/code&gt;,
it takes 10 seconds to pick up a change. That’s unacceptable, given that it’s
supposed to be incremental. It’s written in Ruby, which is part of the reason
it’s slow, and also holds me back from wanting to fix it (I have no interest
in learning Ruby).&lt;/p&gt;

&lt;p&gt;So now I’m writing technical docs with Sphinx and reStructuredText. I’m liking
it for now, but the true test will be in the long run, but also “can I write a
book with it?”. I cannot conceive of writing a book in Markdown.&lt;/p&gt;

&lt;p&gt;I did use TeX a long time ago, but I found that I got lost in the code when
I was writing large things. And that was with a relatively friendly program
like Bluesky TexTures. I was a TeX fan in the 1980s, but while it made awesome
strides compared to everything else in the 1970s and 1980s, it just didn’t stick
for me as something I could write in.&lt;/p&gt;

&lt;p&gt;Likewise with FrameMaker. I loved FrameMaker and used it successfully for a long
while, but then Adobe basically abandoned the Mac version and I fell out of love
with it. Also, the direction that FrameMaker took went in a direction different
than what I was interested in.&lt;/p&gt;

&lt;p&gt;Sphinx is best set up in a virtualenv, because it pulls in a lot of things. And
since I’ve never used virtualenv before, here’s my crib notes for Windows.&lt;/p&gt;

&lt;h2 id=&quot;create-new-virtualenv-environment&quot;&gt;Create new virtualenv environment&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;&amp;gt;virtualenv sphinx
Using base prefix &lt;span class=&quot;s1&quot;&gt;&amp;#39;c:\\python35&amp;#39;&lt;/span&gt;
New python executable in C:&lt;span class=&quot;se&quot;&gt;\w\s&lt;/span&gt;phinx&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;cripts&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;ython.exe
Installing setuptools, pip, wheel...done.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;activate-environment&quot;&gt;Activate environment&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;&amp;gt;cd sphinx
C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;&amp;gt;Scripts&lt;span class=&quot;se&quot;&gt;\a&lt;/span&gt;ctivate
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; C:&lt;span class=&quot;se&quot;&gt;\w\s&lt;/span&gt;phinx&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The activate script alters your prompt to remind you that you are in the virtualenv
environment.&lt;/p&gt;

&lt;h2 id=&quot;installing-packages-into-the-virtual-environment&quot;&gt;Installing packages into the virtual environment&lt;/h2&gt;

&lt;p&gt;Once you’ve activated the environment, any new packages just go into that environment.
That’s the entire point and reason for using virtualenv.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; C:&lt;span class=&quot;se&quot;&gt;\w\s&lt;/span&gt;phinx&amp;gt;pip install sphinx
Collecting sphinx
  Using cached Sphinx-1.4.8-py2.py3-none-any.whl
Collecting snowballstemmer&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Using cached snowballstemmer-1.2.1-py2.py3-none-any.whl
...
Building wheels &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; collected packages: MarkupSafe
  Running setup.py bdist_wheel &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; MarkupSafe ... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
  Stored in directory: C:&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;fitz&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;ppData&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;ocal&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;ip&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;ache&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;heels&lt;span class=&quot;se&quot;&gt;\a&lt;/span&gt;3&lt;span class=&quot;se&quot;&gt;\f&lt;/span&gt;a&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;c&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;198eed9ad95489b8a4f45d14dd5d2aee3f8984e46862c5748
Successfully built MarkupSafe
Installing collected packages: snowballstemmer, imagesize, alabaster, MarkupSafe, Jinja2, pytz, babel, Pygments, six, colorama, docutils, sphinx
Successfully installed Jinja2-2.8 MarkupSafe-0.23 Pygments-2.1.3 alabaster-0.7.9 babel-2.3.4 colorama-0.3.7 docutils-0.12 imagesize-0.7.1 pytz-2016.7 six-1.10.0 snowballstemmer-1.2.1 sphinx-1.4.8&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;deactivate-environment&quot;&gt;Deactivate environment&lt;/h2&gt;

&lt;p&gt;You could just close the cmd shell you have open, or you could deactivate the virtualenv&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; C:&lt;span class=&quot;se&quot;&gt;\w\d&lt;/span&gt;oc&amp;gt;deactivate
C:&lt;span class=&quot;se&quot;&gt;\w\d&lt;/span&gt;oc&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;using-sphinx&quot;&gt;Using Sphinx&lt;/h2&gt;

&lt;p&gt;The Sphinx documentation isn’t very clearly written. Or rather, it is good reference documentation,
but it’s a little hard to get started.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt; documentation can be found starting here. 1.4.8
is the latest version as of this moment.&lt;/p&gt;

&lt;p&gt;The quickstart at &lt;a href=&quot;http://www.sphinx-doc.org/en/1.4.8/tutorial.html&quot;&gt;First Steps with Sphinx&lt;/a&gt;
has you run &lt;code&gt;sphinx-quickstart&lt;/code&gt;. This asks a ton of questions that you’re not likely to be 
sure on the answers. Worse, it’s not very friendly on Windows, it seems to assume that
terminal escape codes work (not the case on cmd.exe for the most part).&lt;/p&gt;

&lt;p&gt;I ran it from within my newly created doc folder and said “.” for the root path. I then
answered everything else to the best of my knowledge.&lt;/p&gt;

&lt;p&gt;In the end, all that gets created is a text config file named &lt;code&gt;conf.py&lt;/code&gt;. It’s commented
liberally along the model of Apache and other programs with lots of config. Usefully,
it has a lot of the options in the file, and if they don’t apply, they are commented out.&lt;/p&gt;

&lt;p&gt;The defautl use is HTML, but it supports LaTeX output, and that is useful for feeding to
a TeX-to-PDF converter.&lt;/p&gt;

&lt;p&gt;All this is the simple part. The most important step is “how do I add stuff”, and then “how do
I turn this into something others can read”.&lt;/p&gt;

&lt;h3 id=&quot;adding-text&quot;&gt;Adding text&lt;/h3&gt;

&lt;p&gt;The index.rst file in the root of your documentation tree is the top page and the master
index all in one. My simple one looks like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;.. Provenance documentation master file, created by
   sphinx-quickstart on Mon Nov  &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt; 13:56:13 2016.
   You can adapt this file completely to your liking, but it should at least
   contain the root &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;toctree&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; directive.

Welcome to Provenance&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;s documentation!
&lt;span class=&quot;o&quot;&gt;======================================&lt;/span&gt;

Contents:

.. toctree::
   :maxdepth: 2

   intro
   github-info
   references

Indices and &lt;span class=&quot;nv&quot;&gt;tables&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;==================&lt;/span&gt;

* :ref:&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;genindex&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
* :ref:&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;modindex&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
* :ref:&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;search&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is the top-level page, so anything that’s not a directive will show up in your
output.&lt;/p&gt;

&lt;p&gt;Each entry in toctree is the name of another file to process, ending in .rst. These are
relative paths and for a big project you’ll have some organization to it. For now I have
a handful of files.&lt;/p&gt;

&lt;p&gt;The absolute coolest thing about Sphinx is that it creates a search page for your
documentation.&lt;/p&gt;

&lt;h3 id=&quot;building&quot;&gt;Building&lt;/h3&gt;

&lt;p&gt;The long-form is to run &lt;code&gt;sphinx-build -b html . _build&lt;/code&gt;. There are some convenience
makefiles that work for most use cases. Just running &lt;code&gt;make html&lt;/code&gt; is enough for
generating your HTML site into the &lt;code&gt;_build&lt;/code&gt; folder (or whatever you named as your
output). The site is in &lt;code&gt;_build\html&lt;/code&gt; and since it’s making a web site, there is
a &lt;code&gt;_build\html\index.html&lt;/code&gt; that is the root page.&lt;/p&gt;

&lt;h2 id=&quot;further-thoughts&quot;&gt;Further thoughts&lt;/h2&gt;

&lt;p&gt;Sphinx isn’t incremental like Jekyll, so I’m not sure how happy I’ll be writing a blog
in it. But I like restructuredText far more than Markdown.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://matplotlib.org/sampledoc/cheatsheet.html&quot;&gt;Sphinx cheat sheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://thomas-cokelaer.info/tutorials/sphinx/rest_syntax.html&quot;&gt;Restructured Text (reST) and Sphinx CheatSheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sphinx-doc.org/en/latest/invocation.html&quot;&gt;Invocation of sphinx-quickstart&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Nov 2016 10:00:07 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/11/09/sphinx-for-documentation.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/11/09/sphinx-for-documentation.html</guid>
        
        <category>python</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Package manager failure</title>
        <description>&lt;p&gt;Package managers shouldn’t do this. TL/DR - I just wanted to install Sphinx. It
installed fine on one machine, but the install barfed on another. I have no idea
how to fix this, and casual googling provided no relief. So - I am actually
uninstalling and re-installing Python, for lack of any better idea.&lt;/p&gt;

&lt;p&gt;I tried upgrading to the newest pip as suggested, but of course that did nothing.
Maybe it’s because I’m running Python 3.6 beta on the machine in question. Of course,
I would like to know why it didn’t give me a sensible error instead of this. So I’ll
uninstall Python 3.6 beta and install latest Python 3.5, because I’m guessing it’s
something related to that.&lt;/p&gt;

&lt;p&gt;My actual point is that this is not sensible behavior for a package manager. Package
managers should just work. This indicates a design flaw to me somewhere in the system.&lt;/p&gt;

&lt;p&gt;Update: a slightly better Google search did turn up a Stackoverflow page (of course),
and I guess Python 3.6 beta is a little too bleeding edge for me. So my point might
still stand, but not precisely pointed at Python and pip, just in general.&lt;/p&gt;

&lt;p&gt;Things should work, dammit.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;&amp;gt;pip install sphinx
Collecting sphinx
  Downloading Sphinx-1.4.8-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.6MB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    100% &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;████████████████████████████████&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 1.6MB 618kB/s
Collecting snowballstemmer&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Downloading snowballstemmer-1.2.1-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;64kB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    100% &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;████████████████████████████████&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 71kB 3.8MB/s
Collecting docutils&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.11 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Downloading docutils-0.12-py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;508kB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    100% &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;████████████████████████████████&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 512kB 1.2MB/s
Collecting Pygments&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Downloading Pygments-2.1.3-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;755kB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    100% &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;████████████████████████████████&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 757kB 282kB/s
Collecting alabaster&amp;lt;0.8,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.7 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Downloading alabaster-0.7.9-py2.py3-none-any.whl
Collecting babel!&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.0,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Downloading Babel-2.3.4-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;7.1MB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    100% &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;████████████████████████████████&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 7.1MB 136kB/s
Collecting imagesize &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Downloading imagesize-0.7.1-py2.py3-none-any.whl
Collecting six&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.5 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Downloading six-1.10.0-py2.py3-none-any.whl
Collecting colorama&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.3.5&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;sys_platform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;win32&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Downloading colorama-0.3.7-py2.py3-none-any.whl
Collecting Jinja2&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Downloading Jinja2-2.8-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;263kB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    100% &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;████████████████████████████████&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 266kB 345kB/s
Collecting pytz&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0a &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from babel!&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.0,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.3-&amp;gt;sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Downloading pytz-2016.7-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;480kB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    100% &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;████████████████████████████████&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 481kB 480kB/s
Collecting MarkupSafe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from Jinja2&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.3-&amp;gt;sphinx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Downloading MarkupSafe-0.23.tar.gz
Installing collected packages: snowballstemmer, docutils, Pygments, alabaster, pytz, babel, imagesize, six, colorama, MarkupSafe, Jinja2, sphinx
Exception:
Traceback &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;most recent call last&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
  File &lt;span class=&quot;s2&quot;&gt;&amp;quot;c:\python36b2\lib\site-packages\pip\basecommand.py&amp;quot;&lt;/span&gt;, line 215, in main
    &lt;span class=&quot;nv&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; self.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;options, args&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&amp;quot;c:\python36b2\lib\site-packages\pip\commands\install.py&amp;quot;&lt;/span&gt;, line 317, in run
    &lt;span class=&quot;nv&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;options.prefix_path,
  File &lt;span class=&quot;s2&quot;&gt;&amp;quot;c:\python36b2\lib\site-packages\pip\req\req_set.py&amp;quot;&lt;/span&gt;, line 742, in install
    **kwargs
  File &lt;span class=&quot;s2&quot;&gt;&amp;quot;c:\python36b2\lib\site-packages\pip\req\req_install.py&amp;quot;&lt;/span&gt;, line 831, in install
    self.move_wheel_files&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;self.source_dir, &lt;span class=&quot;nv&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root, &lt;span class=&quot;nv&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;prefix&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&amp;quot;c:\python36b2\lib\site-packages\pip\req\req_install.py&amp;quot;&lt;/span&gt;, line 1032, in move_wheel_files
    &lt;span class=&quot;nv&quot;&gt;isolated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;self.isolated,
  File &lt;span class=&quot;s2&quot;&gt;&amp;quot;c:\python36b2\lib\site-packages\pip\wheel.py&amp;quot;&lt;/span&gt;, line 493, in move_wheel_files
    maker.make_multiple&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;%s = %s&amp;#39;&lt;/span&gt; % kv &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; kv in console.items&lt;span class=&quot;o&quot;&gt;()])&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&amp;quot;c:\python36b2\lib\site-packages\pip\_vendor\distlib\scripts.py&amp;quot;&lt;/span&gt;, line 383, in make_multiple
    filenames.extend&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;self.make&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;specification, options&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&amp;quot;c:\python36b2\lib\site-packages\pip\_vendor\distlib\scripts.py&amp;quot;&lt;/span&gt;, line 372, in make
    self._make_script&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;entry, filenames, &lt;span class=&quot;nv&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;options&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&amp;quot;c:\python36b2\lib\site-packages\pip\_vendor\distlib\scripts.py&amp;quot;&lt;/span&gt;, line 276, in _make_script
    self._write_script&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;scriptnames, shebang, script, filenames, ext&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&amp;quot;c:\python36b2\lib\site-packages\pip\_vendor\distlib\scripts.py&amp;quot;&lt;/span&gt;, line 212, in _write_script
    &lt;span class=&quot;nv&quot;&gt;launcher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; self._get_launcher&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;t&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&amp;quot;c:\python36b2\lib\site-packages\pip\_vendor\distlib\scripts.py&amp;quot;&lt;/span&gt;, line 351, in _get_launcher
    &lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; finder&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;distlib_package&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.find&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.bytes
  File &lt;span class=&quot;s2&quot;&gt;&amp;quot;c:\python36b2\lib\site-packages\pip\_vendor\distlib\resources.py&amp;quot;&lt;/span&gt;, line 324, in finder
    raise DistlibException&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Unable to locate finder for %r&amp;#39;&lt;/span&gt; % package&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
pip._vendor.distlib.DistlibException: Unable to locate finder &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pip._vendor.distlib&amp;#39;&lt;/span&gt;
You are using pip version 8.1.2, however version 9.0.1 is available.
You should consider upgrading via the &lt;span class=&quot;s1&quot;&gt;&amp;#39;python -m pip install --upgrade pip&amp;#39;&lt;/span&gt; command.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 07 Nov 2016 17:39:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/11/07/package-manager-failure.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/11/07/package-manager-failure.html</guid>
        
        <category>python</category>
        
        
        <category>dev</category>
        
      </item>
    
  </channel>
</rss>

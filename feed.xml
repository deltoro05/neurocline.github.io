<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Some Things Are Obvious</title>
    <description>Answers to some of the world&#39;s questions
</description>
    <link>http://neurocline.github.io/</link>
    <atom:link href="http://neurocline.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 04 Apr 2016 07:26:11 -0700</pubDate>
    <lastBuildDate>Mon, 04 Apr 2016 07:26:11 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Rules for cross-platform programming</title>
        <description>&lt;p&gt;Writing reusable code is in general a good thing to do, and the number one lesson there is about
managing dependencies. Writing cross-platform code has a different set of challenges, and is best
considered as a super-set of the reusable code problem.&lt;/p&gt;

&lt;p&gt;This is a “part 1 of N” series”. Consider this the notes for that book you’ve always wished existed.&lt;/p&gt;

&lt;h1 id=&quot;use-utf-8-as-your-text-format&quot;&gt;Use UTF-8 as your text format&lt;/h1&gt;

&lt;p&gt;Unicode has grown into its original arrogant name of “Universal character set”. Of all the encodings
of Unicode, UTF-8 is the most practical. Use UTF-8 as your program’s character set, keep all your
strings in UTF-8. This includes any of your own data you read and write.&lt;/p&gt;

&lt;p&gt;Convert to the platform character set/encoding on input and output. When you get a string from an
operating system function, convert it to UTF-8. When you need to output a string, convert it to
what the platform needs.&lt;/p&gt;

&lt;p&gt;By doing this, you’ll find that all your special cases are kept at the boundaries of your code. You’ll
also ensure that you only have N conversions (where N is the number of distinct operating system
encodings that you support), and not creep into N^2.&lt;/p&gt;

&lt;p&gt;This task is actually fairly easy on modern Linux and Mac OS X, which both use UTF-8 as their
platform character set (or can be told to do so). The best current way to write Windows programs is
as UCS16-LE (their “Unicode” setting is really 16-bit UCS stored as little-endian characters). It’s
best to write a set of wrappers to convert to/from “native” (your format), and have that be passthrough
functions when running on a platform that uses UTF-8.&lt;/p&gt;

&lt;p&gt;At some point soon, I’ll create a package that does this, that follows the other dictum of “carefully
manage dependencies”. There are larger projects like iconv and icu that can be bent to this task, but
they lack the easy helper functions we would need to make this transparent in our code.&lt;/p&gt;

&lt;h1 id=&quot;a-file-names-is-the-sequence-of-characters-the-os-gave-you&quot;&gt;A file names is the sequence of characters the OS gave you&lt;/h1&gt;

&lt;p&gt;Despite appearances, file names and the paths constructed from them aren’t really text. The end
user thinks of names this way, of course, because file names by and large are meant for use by
people. But a file name is really a sequence of octets that a filesystem has matched up with
an file entry. If you change any of the bytes in the file name, then you will find that you can no longer
find that file entry, and then the user will think the file is missing.&lt;/p&gt;

&lt;p&gt;Unfortunately, while we can usually preserve meaning in round-trips between encodings, it is all too easy
to change byte sequences. Consider Mac OS X filenames - these are UTF-8 strings stored in a mostly but
not completely decomposed form (&lt;a href=&quot;https://developer.apple.com/library/mac/qa/qa1173/_index.html&quot;&gt;Text Encodings in VFS&lt;/a&gt;).
And while that is possible to manage, many filesystems don’t actually specify the name encoding, so it’s
quite likely for you to mangle filenames by making incorrect assumptions.&lt;/p&gt;

&lt;p&gt;The best approach is to never alter filenames, but to leave them as octet strings. This means several
things. First, you’ll manipulate paths via path functions, and not as strings. Second, if you need to
output a string, you’ll make your best guess as to the encoding and convert it as you need.&lt;/p&gt;

&lt;p&gt;This is a little awkward, but means that your code will be robust across encodings. It does mean that you
have a challenge if you need to record paths in config files or databases. But since paths are only relevant
to the filesystem they came from, I suggest that you record the paths as the original byte sequences.&lt;/p&gt;

&lt;p&gt;Some times programs can dictate the names that are used for filenames, but this is very rare, and not worth
considering.&lt;/p&gt;

&lt;p&gt;When I say that file names are tied to file systems, I mean specifically that. If you copy a file to another
file system, it now potentially has two different sets of octets it is known by, depending on the limitations
of each filesystem. It is the name that the copy is created under that is the name on the destination
filesystem. Most of the time, the octets for the source file and the octets for the destination file are
the same. This is not guaranteed, so do not rely on it.&lt;/p&gt;

&lt;p&gt;Well-known filenames are a different matter. Not all filenames are discovered, some are predetermined. However,
that doesn’t make your life any easier. As long as there can be user-defined filenames, it’s best to treat
all filenames by the same rule.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Apr 2016 09:04:00 -0700</pubDate>
        <link>http://neurocline.github.io/dev/2016/04/03/rules-for-cross-platform-programming.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/04/03/rules-for-cross-platform-programming.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.vagrantup.com/docs/&quot;&gt;VAGRANT DOCUMENTATION&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://atlas.hashicorp.com/boxes/search&quot;&gt;Discover Vagrant Boxes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.osteel.me/posts/2015/01/25/how-to-use-vagrant-on-windows.html&quot;&gt;How to use Vagrant on Windows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unbreakable cryptography is both easy and hard. Unbreakable - given a long stream of random bits,
XOR it with your data. The result is unbreakable - if you have random bits, and both sides need
the same random bits. But if you want to communicate with a known person, and you expect that both
sides can keep their bitpad secret, then your communication will look like noise, and be unbreakable.
This is why authorities trying to backdoor crypto algorithms have different motives than the stated - they
don’t want to catch terrorists this way, they want to read all communications, for no other reason than
to prop up the current regime, whatever that is.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://openfortress.org/cryptodoc/random/&quot;&gt;How To Generate Truly Random Bits&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;ftp://ftp.ietf.org/rfc/rfc1750.txt&quot;&gt;Randomness Recommendations for Security&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://world.std.com/~reinhold/truenoise.html&quot;&gt;Random Noise Sources from Diceware.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.maximintegrated.com/en/app-notes/index.mvp/id/3469&quot;&gt;Building a Low-Cost White-Noise Generator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cryogenius.com/hardware/rng/&quot;&gt;Hardware Random Number Generator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://scruss.com/blog/2013/06/07/well-that-was-unexpected-the-raspberry-pis-hardware-random-number-generator/&quot;&gt;“WELL, THAT WAS UNEXPECTED…”: THE RASPBERRY PI’S HARDWARE RANDOM NUMBER GENERATOR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://scruss.com/blog/2013/06/08/artisanal-hardware-random-number-generator/&quot;&gt;ARTISANAL HARDWARE RANDOM NUMBER GENERATOR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://robseward.com/itp/adv_tech/random_generator/&quot;&gt;Build your own True Random Number Generator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://robseward.com/misc/RNG2/&quot;&gt;Make your own True Random Number Generator 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://electronicdesign.com/learning-resources/understanding-intels-ivy-bridge-random-number-generator&quot;&gt;Understanding Intel’s Ivy Bridge Random Number Generator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.instructables.com/id/A-Raspberry-Pi-based-Truly-Random-Number-Generator/&quot;&gt;A Raspberry Pi-based Truly Random Number Generator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/endolith/2568571&quot;&gt;Arduino hardware true random number generator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.instructables.com/id/Arduino-True-Random-Number-Generator/&quot;&gt;Arduino True Random Number Generator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.johngustafson.net/presentations/Multicore2016-JLG.pdf&quot;&gt;A Radical Approach to Computation with Real Numbers&lt;/a&gt;. “Unums version 2.0”&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://iovisor.github.io/bcc/&quot;&gt;BCC: Dynamic Tracing Tools for Linux&lt;/a&gt;. Built on top of BPF, requires Linux 4.1 or higher.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.eecs.berkeley.edu/~rcs/research/interactive_latency.html&quot;&gt;Latency Numbers Every Programmer Should Know&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Apr 2016 01:24:00 -0700</pubDate>
        <link>http://neurocline.github.io/dev/2016/04/02/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/04/02/recent-links.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2007689/is-there-a-standard-file-extension-for-msbuild-files&quot;&gt;Is there a standard file extension for MSBuild files?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codeproject.com/Articles/465087/Introduction-to-MSBuild-Part&quot;&gt;ntroduction to MSBuild - Part 1&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://matroska.org/technical/specs/rfc/index.html&quot;&gt;EBML RFC (Draft)&lt;/a&gt;. Also see &lt;a href=&quot;https://github.com/Matroska-Org/libebml&quot;&gt;Matroska-Org/libebml&lt;/a&gt; for C++ EBML parser with LGPL license.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Configuration.html&quot;&gt;How Configuration Should Work&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Directory-Variables.html&quot;&gt;Variables for Installation Directories&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tldp.org/LDP/LG/current/smith.html&quot;&gt;configure; make; make install&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tldp.org/HOWTO/Software-Building-HOWTO-3.html&quot;&gt;Using Make&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://robots.thoughtbot.com/the-magic-behind-configure-make-make-install&quot;&gt;The magic behind configure, make, make install&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.snake.net/software/imake-stuff/imake-faq.html&quot;&gt;imake Frequently Asked Questions&lt;/a&gt;. Except I think imake is dead.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_Build_System&quot;&gt;GNU Build System&lt;/a&gt;. Mainly for the picture.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://inti.sourceforge.net/tutorial/libinti/autotoolsproject.html&quot;&gt;Building a GNU Autotools Project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codecoffee.com/tipsforlinux/articles/27.html&quot;&gt;Understanding software Installation (configure, make, make install)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/chen3feng/typhoon-blade/&quot;&gt;chen3feng/typhoon-blade&lt;/a&gt;. Build system inspired by Google paper. Also see projects that blade can build at &lt;a href=&quot;https://github.com/chjp2046/thirdparty&quot;&gt;chjp2046/thirdparty&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/antirez/linenoise&quot;&gt;antirez/linenoise&lt;/a&gt;. A BSD licensed readline replacement. Halleluja!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt;ggreer/the_silver_searcher&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stedolan/jq&quot;&gt;stedolan/jq&lt;/a&gt;. Command-line JSON processor http://stedolan.github.io/jq/&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://libevent.org/&quot;&gt;libevent&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/libuv/libuv&quot;&gt;libuv/libuv&lt;/a&gt;. Also see &lt;a href=&quot;http://nikhilm.github.io/uvbook/introduction.html&quot;&gt;An Introduction to libuv&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.kegel.com/c10k.html&quot;&gt;The C10K problem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wishstudio/flinux&quot;&gt;wishstudio/flinux&lt;/a&gt;. Foreign LINUX is a dynamic binary translator and a Linux system call interface emulator for the Windows platform.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nanomsg/nanomsg&quot;&gt;nanomsg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodejs/http-parser&quot;&gt;nodejs/http-parser&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/clibs/clib&quot;&gt;clibs/clib&lt;/a&gt;. Package manager for the C programming language. The Wiki has a list of &lt;a href=&quot;https://github.com/clibs/clib/wiki/Packages&quot;&gt;Packages&lt;/a&gt;. See &lt;a href=&quot;https://medium.com/@tjholowaychuk/introducing-clib-b32e6e769cb3#.t6bd5p3qo&quot;&gt;Introducing Clib&lt;/a&gt; for an introductory article. See older article &lt;a href=&quot;https://blog.ashworth.in/the-advent-of-clib-the-c-package-manager/&quot;&gt;The Advent of Clib: the C Package Manager&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vmg/sundown&quot;&gt;https://github.com/vmg/sundown&lt;/a&gt;. Markdown processing library in C. See original &lt;a href=&quot;http://fossil.instinctive.eu/libsoldout/index&quot;&gt;upskirt/libsoldout&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Mar 2016 17:43:00 -0700</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/28/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/28/recent-links.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.haneycodes.net/npm-left-pad-have-we-forgotten-how-to-program/&quot;&gt;NPM &amp;amp; left-pad: Have We Forgotten How To Program?&lt;/a&gt;. The comments are the best part.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@robbyrussell/d-oh-my-zsh-af99ca54212c#.ykwlny1s9&quot;&gt;d’Oh My Zsh&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nytimes.com/2016/03/26/opinion/andy-groves-warning-to-silicon-valley.html&quot;&gt;Andy Grove’s Warning to Silicon Valley&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://arstechnica.com/tech-policy/2016/03/game-companies-knock-out-patent-that-slammed-microsoft-with-388m-verdict/&quot;&gt;Patent that cost Microsoft millions gets invalidated&lt;/a&gt;. Crappy patent gets overturned after many years of litigation and use.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ANSSI-FR/caradoc&quot;&gt;Caradoc - a PDF parser and validator&lt;/a&gt;. This looks like it is related to something I was working towards, binary file grammars.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lucumr.pocoo.org/2016/3/24/open-source-trust-scaling/&quot;&gt;Micropackages and Open Source Trust Scaling&lt;/a&gt;. 
&lt;a href=&quot;https://news.ycombinator.com/item?id=11352704&quot;&gt;comment thread&lt;/a&gt;. And another &lt;a href=&quot;https://news.ycombinator.com/item?id=11354147&quot;&gt;comment thread&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://caremad.io/2013/07/packaging-signing-not-holy-grail/&quot;&gt;Why Package Signing is not the Holy Grail&lt;/a&gt;. Signing with private keys isn’t practical for many reasons. But it is possible to have a trusted upstream sign and send you a list of content hashes for approved packages, or you can do that yourself.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;Contribution Points - package.json&lt;/a&gt;. Visual Studio Code extensions have a package.json manifest file. I think Visual Studio Code is written in Node.js?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pythonhosted.org/distil/packaging.html&quot;&gt;Packaging distributions&lt;/a&gt;. Python distutil now uses a package.json file instead of a setup.py file for config.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pauleveritt.org/articles/pylyglot/package_json/&quot;&gt;JavaScript Packaging with package.json&lt;/a&gt;. Walkthrough on creating packages for npm.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@alonisser/things-i-wish-pip-learned-from-npm-f712fa26f5bc#.w4u3fte4w&quot;&gt;Things I wish Pip learned from Npm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/how-heroku-works&quot;&gt;How Heroku Works&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/whyrusleeping/gx&quot;&gt;gx&lt;/a&gt;. “The language-agnostic, universal package manager”. Bold claim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://webdocs.cs.ualberta.ca/~cdavid/starcraftaicomp/history.shtml&quot;&gt;A History of Starcraft AI Competitions (and UAlbertaBot)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.metzdowd.com/pipermail/cryptography/2016-March/028824.html&quot;&gt;On the Impending Crypto Monoculture&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cs.cmu.edu/~chensm/Big_Data_reading_group/papers/flexsc-osdi10.pdf&quot;&gt;FlexSC: Flexible System Call Scheduling with Exception-Less System Calls&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dev.otto.de/2016/03/20/why-microservices/&quot;&gt;Why Microservices?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.patternlanguage.com/archive/ieee/ieeetext.htm&quot;&gt;The Origins of Pattern Theory, the Future of the Theory, And The Generation of a Living World&lt;/a&gt;. Christopher Alexander talk from 1996.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF&quot;&gt;Why numbering should start at zero&lt;/a&gt;. Dijkstra letter, 1982.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/agauniyal/rang&quot;&gt;agauniyal/rang&lt;/a&gt;. A simple, modern &amp;amp; header only c++11 library for colors in your terminal. Right now, just term support, doesn’t work on Windows.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://nghttp2.org/documentation/libnghttp2_asio.html&quot;&gt;libnghttp2_asio: High level HTTP/2 C++ library&lt;/a&gt;. Mix libnghttp2 and Boost.Asio together.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://shaharmike.com/cpp/vtable-part1/&quot;&gt;C++ vtables - Part 1 - Basics&lt;/a&gt;. Just covers Clang at the moment. See &lt;a href=&quot;https://www.reddit.com/r/cpp/comments/4bxpnc/how_are_vtables_implemented_4_parts_series/&quot;&gt;reddit/r/cpp&lt;/a&gt; thread for comment on MSVC.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://arobenko.gitbooks.io/bare_metal_cpp/content/index.html&quot;&gt;Practical Guide to Bare Metal C++&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ziacko/TinyWindow&quot;&gt;ziacko/TinyWindow&lt;/a&gt;. a cross platform single header window management library. Also see &lt;a href=&quot;https://www.reddit.com/r/cpp/comments/4bqc5a/tinywindow_a_cross_platform_linux_and_windows/&quot;&gt;reddit/r/cpp&lt;/a&gt; thread.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2016/03/houdini-maybe-the-most-exciting-development-in-css-youve-never-heard-of/&quot;&gt;Houdini: Maybe The Most Exciting Development In CSS You’ve Never Heard Of&lt;/a&gt;. Extending the browser model to allow developers to extend the CSS model.&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Mar 2016 18:37:00 -0700</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/26/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/26/recent-links.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;Rcpp looks very interesting, letting you use R from inside a C++ program.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://dirk.eddelbuettel.com/code/rinside.html&quot;&gt;RInside&lt;/a&gt;. The RInside package provides C++ classes that make it easier to embed &lt;a href=&quot;https://www.r-project.org/&quot;&gt;R&lt;/a&gt; in C++ codee – on either Linux, OS X or Windows. This is part of the Rcpp project.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.rcpp.org/&quot;&gt;Rcpp&lt;/a&gt;. Rcpp provides a powerful API on top of R, permitting direct interchange of rich R objects (including S3, S4 or Reference Class objects) between R and C++&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.rcpp.org/book/&quot;&gt;Seamless R and C++ Integration with Rcpp&lt;/a&gt;. The book. &lt;a href=&quot;http://www.amazon.com/Seamless-Integration-Rcpp-Dirk-Eddelbuettel/dp/1461468671&quot;&gt;Amazon link&lt;/a&gt;. Also see &lt;a href=&quot;http://dirk.eddelbuettel.com/code/rcpp/Rcpp-introduction.pdf&quot;&gt;Intro paper&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/RcppCore/Rcpp&quot;&gt;RcppCore/Rcpp&lt;/a&gt;. Github repo.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gallery.rcpp.org/&quot;&gt;Gallery&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.r-project.org/&quot;&gt;The R project&lt;/a&gt;. Of course, it still leads back to here.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Voultapher/Vool/blob/master/GNP.h&quot;&gt;GNP.h&lt;/a&gt;. A simple wrapper to drive Gnuplot with popen.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.stahlke.org/dan/gnuplot-iostream/&quot;&gt;Gnuplot-iostream interface&lt;/a&gt;. Drive gnuplot with an iostream pipe.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://root.cern.ch/&quot;&gt;ROOT&lt;/a&gt;. A data anlysis framework largely written in C++. Used by CERN.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://siliconframework.org/blog/silicon-0-1.html&quot;&gt;Silicon 0.1&lt;/a&gt;. Write HTTP APIs in C++.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/software/libmicrohttpd/&quot;&gt;GNU Libmicrohttpd&lt;/a&gt;. GNU libmicrohttpd is a small C library that is supposed to make it easy to run an HTTP server as part of another application (their words, not mine).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dest-unreach.org/socat/&quot;&gt;socat - Multipurpose relay&lt;/a&gt;. socat is a relay for bidirectional data transfer between two independent data channels.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.gnutls.org/&quot;&gt;GnuTLS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://lwan.ws/&quot;&gt;LWAN&lt;/a&gt;. Lightweight asynchronous multithreaded event-based web server. Written in C.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://templated-thoughts.blogspot.in/2016/03/sub-processing-with-modern-c.html&quot;&gt;Sub-processing with modern C++&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://google.github.io/styleguide/cppguide.html&quot;&gt;Google C++ Style Guide&lt;/a&gt;. This has been evolving over the years, and is becoming something I can agree with.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jinja.pocoo.org/docs/dev/&quot;&gt;Jinja2&lt;/a&gt;. Templating library for Python. Use it as a model for a C++ template library?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cppit/jucipp&quot;&gt;cppit/jucipp&lt;/a&gt;. juCi++: a lightweight, cross-platform C++-IDE supporting C++11, C++14, and experimental C++17 features. Lots of dependencies.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cppformat.github.io/latest/index.html&quot;&gt;cppformat&lt;/a&gt;. Small, safe and fast formatting library for C++. &lt;a href=&quot;https://github.com/cppformat/cppformat&quot;&gt;Github repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0067r1.html&quot;&gt;P0067R1: Elementary string conversions, revision 1&lt;/a&gt;. No implementation yet?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3506.html&quot;&gt;A printf-like Interface for the Streams Library&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dany74q.wordpress.com/2016/03/11/recursively-walking-a-directory-with-cxy-filesystem-yield-similar-to-os-walk-in-python/&quot;&gt;RECURSIVELY WALKING A DIRECTORY WITH C++XY (FILESYSTEM + YIELD) [SIMILAR TO OS.WALK IN PYTHON]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://codexpert.ro/blog/2016/03/07/guidelines-support-library-review-spant/&quot;&gt;Guidelines Support Library Review: span&amp;lt;T&amp;gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ilikebigbits.com/blog/2016/2/28/error-context-better-logging-with&quot;&gt;Error Context - a stack trace for data&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3797.pdf&quot;&gt;C++14 standard&lt;/a&gt;. Approximately; from late 2013.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf&quot;&gt;C11 standard&lt;/a&gt;. Late committee draft.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/language/translation_phases&quot;&gt;Phases of translation&lt;/a&gt;. Slightly more readable than the standard. The preprocessor should be identical between C and C++.&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Mar 2016 22:42:00 -0700</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/20/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/20/recent-links.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Visual Studio notes</title>
        <description>&lt;p&gt;For those of us who want to work on Visual Studio project files:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/visualstudio/2010/05/14/a-guide-to-vcxproj-and-props-file-structure/&quot;&gt;A guide to .vcxproj and .props file structure&lt;/a&gt;. This is a 6-year old post, but the solution and project file formats haven’t changed substantially since then.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.bfitz.us/?p=922&quot;&gt;Hand-constructing Visual Studio 2012 vcxproj&lt;/a&gt;. An older post where I talked about minimum required elements in a vcxproj.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.bfitz.us/?p=955&quot;&gt;VISUAL STUDIO 2012 SOLUTION FILE GRAMMAR&lt;/a&gt;. A stab at a Visual Studio solution grammar.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ee862524.aspx&quot;&gt;Build System Changes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/dd293626.aspx&quot;&gt;MSBuild (Visual C++)&lt;/a&gt;. Since MSBuild is used to drive builds via .vcxproj files, knowing MSBuild can help you understand the items in a .vcxproj file.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/5dy88c2e.aspx&quot;&gt;MSBuild Project File Schema Reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/2208a1f2.aspx&quot;&gt;Project Files&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://robrich.org/archive/2010/04/20/working-with-both-vs-2010-and-2008-on-the-team.aspx&quot;&gt;Working with both VS 2010 and 2008 on the team&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://manski.net/2012/01/sharing-project-properties-in-visual-c/&quot;&gt;Sharing project properties in Visual C++&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pascoal.net/2011/05/getting-visual-studio-version-of-a-solution-file/&quot;&gt;Getting Visual Studio version of a Solution file&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/5629981/question-about-visual-studio-sln-file-format&quot;&gt;Question about Visual Studio *.sln file format&lt;/a&gt;. An explanation for why the files are so messed up.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb165951.aspx&quot;&gt;Solution (.Sln) File&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/7683869/what-does-the-link-library-dependency-linker-option-actually-do-in-visual-stud&quot;&gt;What does the “Link Library Dependency” linker option actually do in Visual Studio 2010?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/forum/#!topic/premake-development/x-cCFNBKVC0&quot;&gt;Premake5 alpha6 issue - ProjectReference’s in vcxproj have disappeared&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/premake/premake-core/issues/208&quot;&gt;dependson can break links in VS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
MSVC++ 14.0 _MSC_VER == 1900 (Visual Studio 2015)
MSVC++ 12.0 _MSC_VER == 1800 (Visual Studio 2013)
MSVC++ 11.0 _MSC_VER == 1700 (Visual Studio 2012)
MSVC++ 10.0 _MSC_VER == 1600 (Visual Studio 2010)
MSVC++ 9.0  _MSC_VER == 1500 (Visual Studio 2008)
MSVC++ 8.0  _MSC_VER == 1400 (Visual Studio 2005)
MSVC++ 7.1  _MSC_VER == 1310 (Visual Studio 2003)
MSVC++ 7.0  _MSC_VER == 1300
MSVC++ 6.0  _MSC_VER == 1200
MSVC++ 5.0  _MSC_VER == 1100
&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Mar 2016 22:14:00 -0700</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/17/visual-studio-notes.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/17/visual-studio-notes.html</guid>
        
        <category>programming</category>
        
        <category>VisualStudio</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://doc.qt.io/qt-5/qmake-project-files.html&quot;&gt;Creating Project Files&lt;/a&gt;. Qmake project file format.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mbevin.wordpress.com/2012/11/16/uniform-initialization/&quot;&gt;LESSON #3: UNIFORM INITIALIZATION&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2179722/checking-out-old-file-with-original-create-modified-timestamps&quot;&gt;Checking out old file WITH original create/modified timestamps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/1964470/whats-the-equivalent-of-use-commit-times-for-git&quot;&gt;What’s the equivalent of use-commit-times for git?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://repo.or.cz/w/metastore.git&quot;&gt;http://repo.or.cz/w/metastore.git&lt;/a&gt;. Making git usable for backing up file attributes too&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MestreLion/git-tools&quot;&gt;https://github.com/MestreLion/git-tools&lt;/a&gt;. Assorted git-related scripts. See git-restore-mtime for a script to set file-modified times to match commit times.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cognitivewaves.wordpress.com/cmake-and-visual-studio/&quot;&gt;CMAKE AND VISUAL STUDIO&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.lua.org/manual/5.2/manual.html&quot;&gt;Lua 5.2 Reference Manual&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://code.google.com/archive/p/msinttypes/&quot;&gt;https://code.google.com/archive/p/msinttypes/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://utf8everywhere.org/&quot;&gt;UTF-8 Everywhere&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://luarocks.org/&quot;&gt;https://luarocks.org/&lt;/a&gt;. LuaRocks is the package manager for Lua modules.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/keplerproject/luarocks/wiki/Rockspec-format&quot;&gt;Rockspec format&lt;/a&gt;. From the Luarocks package manager.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.nodejitsu.com/package-dependencies-done-right/&quot;&gt;Package.json dependencies done right&lt;/a&gt;. Notes from the npm package manager.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Mar 2016 22:03:00 -0700</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/17/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/17/recent-links.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Xcode notes</title>
        <description>&lt;p&gt;Xcode is in parts good to great, and in parts terrible. One thing that’s terrible is all the documentation
that I can lay my hands on. It seems to be aimed at people who work on small projects.&lt;/p&gt;

&lt;p&gt;This is not a replacement, it’s just some things I was searching while I was trying to figure things
out on my own. This is stuff that people have had to figure out, e.g. the Premake and CMake authors doing
Xcode project generation.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pewpewthespells.com/blog/managing_xcode.html&quot;&gt;Managing Xcode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://vocaro.com/trevor/blog/2012/10/21/xcode-groups-vs-folder-references/&quot;&gt;Xcode Groups vs. Folder References&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way, I think CocoaPods is approaching it from the wrong direction, it’s maintaining a foreign
build system inside Xcode. I think. I should really actually use CocoaPods before I condemn it :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/venmo/synx&quot;&gt;venmo/synx&lt;/a&gt; is an interesting project that reorganizes the files on disk
to match the order declared in the Xcode project. This is presumably because people find it easier to
organize the Xcode project first?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9726000/xcode-4-2-and-using-a-static-library-causing-problems/9726445&quot;&gt;XCode 4.2 and Using a Static Library Causing Problems&lt;/a&gt;. I read things like this and I think someone must have gone
horribly wrong somewhere.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.monobjc.net/xcode-project-file-format.html&quot;&gt;Xcode Project File Format&lt;/a&gt;. Some notes from the
Monobjc bridge project on the Xcode project file format.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://danwright.info/blog/2010/10/xcode-pbxproject-files/&quot;&gt;A brief look at the Xcode project format&lt;/a&gt;, and &lt;a href=&quot;http://danwright.info/blog/2010/10/xcode-pbxproject-files-2/&quot;&gt;More on the Xcode project format&lt;/a&gt; and &lt;a href=&quot;http://danwright.info/blog/2010/10/xcode-pbxproject-files-3/&quot;&gt;Xcode project object UUIDs&lt;/a&gt;. A slightly more in depth explanation and spelunking.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cmake.org/pipermail/cmake/2004-April/005015.html&quot;&gt;[Cmake] Re: CMake Apple XCode support?&lt;/a&gt;. A thread from 2004 that apparently predated CMake’s ability to create Xcode projects.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.macdevcenter.com/pub/a/mac/2004/04/20/xcodetounix.html&quot;&gt;PBTOMAKE – Xcode to Unix&lt;/a&gt;. Another 2004 era Xcode project format tool.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.objc.io/issues/6-build-tools/cocoapods-under-the-hood/&quot;&gt;CocoaPods Under The Hood&lt;/a&gt;. Also see &lt;a href=&quot;http://stackoverflow.com/questions/18917137/how-does-cocoapods-work&quot;&gt;How does CocoaPods work&lt;/a&gt;. And then see &lt;a href=&quot;http://blog.mugunthkumar.com/articles/the-problem-with-cocoapods/&quot;&gt;The problem with Cocoapods&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/ios/guides/cocoapods&quot;&gt;Install a Google SDK using CocoaPods&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/0xced/xcproj&quot;&gt;0xced/xcproj&lt;/a&gt;. Command line tool for manipulating Xcode project files.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://drekka.ghost.io/xcode-project-file-merges-or-not-cocoapods/&quot;&gt;XCode project file merges (or not) &amp;amp; Cocoapods&lt;/a&gt;. One technique to mergeable .xcodeproj files is to keep internal sections sorted.&lt;/p&gt;
</description>
        <pubDate>Sun, 13 Mar 2016 22:14:00 -0700</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/13/xcode-notes.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/13/xcode-notes.html</guid>
        
        <category>programming</category>
        
        <category>Xcode</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1967.htm&quot;&gt;Field Experience With Annex K — Bounds Checking Interfaces&lt;/a&gt;. It’s all bad.&lt;/p&gt;

&lt;p&gt;Three-part article on the Jacksonville C++17 meeting&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://meetingcpp.com/index.php/br/items/current-proposals-for-c17.html&quot;&gt;Current Proposals for C++17&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://meetingcpp.com/index.php/br/items/c17-and-its-technical-specifications.html&quot;&gt;C++17 and its Technical Specifications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://meetingcpp.com/index.php/br/items/cpp17-and-other-future-highlights-of-cpp.html&quot;&gt;C++17 and other future highlights of C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@mbostock/what-makes-software-good-943557f8a488#.papdt8s63&quot;&gt;What Makes Software Good?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://sourcecode.cio.gov/&quot;&gt;Source Code Policy&lt;/a&gt;. Government open-source policy.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ssloy/tinyrenderer/wiki&quot;&gt;How OpenGL works: software renderer in 500 lines of code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alehander42/hivemind&quot;&gt;hivemind&lt;/a&gt;. A prototype of a multi-syntax programming language..&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://herbsutter.com/2016/03/11/trip-report-winter-iso-c-standards-meeting/&quot;&gt;Trip report: Winter ISO C++ standards meeting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cityobservatory.org/what-filtering-can-and-cant-do/&quot;&gt;What filtering can and can’t do&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://kivikakk.ee/cryptography/2016/02/20/breaking-homegrown-crypto.html&quot;&gt;Breaking homegrown crypto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://edouard.peller.in/2016/03/12/screencasting-with-free-software.html&quot;&gt;Screencasting with free software&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://techcrunch.com/2016/03/12/driving-the-new-american-century/&quot;&gt;Driving the new American century&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lexborisov.github.io/myhtml/&quot;&gt;MyHTML — HTML Parser on Pure C with POSIX Threads Support&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.oxplot.com/the-art-of-barebackness/&quot;&gt;The Art of Barebackness&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/kachayev/21e7fe149bc5ae0bd878&quot;&gt;Channels Are Not Enough&lt;/a&gt;. Golang Concurrency Patterns for brave and smart.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/machinezone/tcpkali&quot;&gt;tcpkali&lt;/a&gt;. Fast multi-core TCP and WebSockets load generator.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.quantstart.com/articles/How-to-Learn-Advanced-Mathematics-Without-Heading-to-University-Part-1&quot;&gt;HOW TO LEARN ADVANCED MATHEMATICS WITHOUT HEADING TO UNIVERSITY - PART 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://openapis.org/&quot;&gt;Open API Initiative&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jamesfriend.com.au/pce-js/&quot;&gt;PCE.js&lt;/a&gt;. Mac Plus emulator running Mac OS System 7.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/IndieRobert/Common-Fundamental-Theorem-Of-Software-Development&quot;&gt;Common Fundamental Theorem Of Software Development&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tjheeta.github.io/2015/04/15/ansible-vs-chef/&quot;&gt;Ansible vs Chef&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.beepsend.com/2016/03/10/dealing-releases-single-page-applications/&quot;&gt;Dealing with releases of single page applications&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://brian-armstrong.github.io/quiet/&quot;&gt;Quiet&lt;/a&gt;. This library uses liquid SDR to transmit data through sound.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.catonmat.net/blog/frameworks-dont-make-sense/&quot;&gt;Frameworks don’t make much sense&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@crowquine/the-mindset-of-the-software-developer-2b8f64ee96e5#.afn3lg46o&quot;&gt;The mindset of the software developer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gitlab.com/higan/higan/tree/master/nall&quot;&gt;nall&lt;/a&gt;. Another STL-like/replacement.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://juditacs.github.io/2015/11/26/wordcount.html&quot;&gt;Counting words in different programming languages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Piper replaced Perforce at Google in 2012.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.wired.com/2015/09/google-2-billion-lines-codeand-one-place/&quot;&gt;Google Is 2 Billion Lines of Code—And It’s All in One Place&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://plus.google.com/+DominicMitchell/posts/DjABWzqp4kj&quot;&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://bazel.io/&quot;&gt;Bazel&lt;/a&gt; is a public version of Google’s internal build system.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://bitquabit.com/post/unorthodocs-abandon-your-dvcs-and-return-to-sanity/&quot;&gt;Unorthodocs: Abandon your DVCS and Return to Sanity&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.acolyer.org/2016/03/04/googles-hybrid-approach-to-research/&quot;&gt;Google’s Hybrid Approach to Research&lt;/a&gt; overview from The Morning Paper, and &lt;a href=&quot;https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/38149.pdf&quot;&gt;paper&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ecc-comp.blogspot.com/2015/05/a-brief-glance-at-how-5-text-editors.html&quot;&gt;A Brief Glance at How Various Text Editors Manage Their Textual Data&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.scaleway.com/2016/03/08/c2-insanely-affordable-x64-servers/&quot;&gt;C2: Insanely Affordable x86-64 Servers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.docker.com/2016/03/swarmweek-docker-swarm-exceeds-kubernetes-scale/&quot;&gt;Docker Swarm Exceeds Kubernetes Performance at Scale&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Mar 2016 22:03:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/12/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/12/recent-links.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Recent links</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/GSL&quot;&gt;GSL: Guidelines Support Library&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/unittest-cpp&quot;&gt;UnitTest++&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://code.woboq.org/&quot;&gt;Code Browser by Woboq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/49eyer/shimo_maven_for_c/&quot;&gt;Shimo - Maven for C++&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pocoproject.org/index.html&quot;&gt;POCO C++ Libraries&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pandoc.org/&quot;&gt;Pandoc: a universal document converter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/CocoaPods/CocoaPods/issues/4989#issuecomment-193772935&quot;&gt;Issues Cloning Spec repo - GitHub taking a very long time to download changes to the Specs Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://githubengineering.com/counting-objects/&quot;&gt;Counting Objects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=HxYFSlDdl0c&quot;&gt;Boris Kolpackov: New Build System for New C++&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codesynthesis.com/&quot;&gt;Code Synthesis&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.murrayc.com/permalink/2016/03/07/libsigc-3-0-very-variadic/&quot;&gt;libsigc++ 3.0: Very variadic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://buildroot.org/&quot;&gt;Buildroot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cacm.acm.org/magazines/2016/3/198849-a-differential-approach-to-undefined-behavior-detection/fulltext&quot;&gt;A Differential Approach to Undefined Behavior Detection&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.copperspice.com/docs/doxypress/index.html&quot;&gt;DoxyPress&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/48shrb/seriously_c_wtf/&quot;&gt;Seriously, C++, WTF?&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Mar 2016 21:07:00 -0800</pubDate>
        <link>http://neurocline.github.io/dev/2016/03/08/recent-links.html</link>
        <guid isPermaLink="true">http://neurocline.github.io/dev/2016/03/08/recent-links.html</guid>
        
        <category>links</category>
        
        
        <category>dev</category>
        
      </item>
    
  </channel>
</rss>
